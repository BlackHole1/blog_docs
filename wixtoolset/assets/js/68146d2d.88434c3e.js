"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[14327],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},43965:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>d});a(67294);var r=a(3905);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const o={custom_edit_url:null,toc_max_heading_level:2},s="VerUtilVersion Class",p={unversionedId:"api/wixtoolset.mba.core/verutilversion",id:"api/wixtoolset.mba.core/verutilversion",title:"VerUtilVersion Class",description:"An enhanced implementation of SemVer 2.0.",source:"@site/docs/api/wixtoolset.mba.core/verutilversion.md",sourceDirName:"api/wixtoolset.mba.core",slug:"/api/wixtoolset.mba.core/verutilversion",permalink:"/wixtoolset/docs/api/wixtoolset.mba.core/verutilversion",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null,toc_max_heading_level:2},sidebar:"docsSidebar",previous:{title:"VerUtil Class",permalink:"/wixtoolset/docs/api/wixtoolset.mba.core/verutil"},next:{title:"VerUtilVersionReleaseLabel Class",permalink:"/wixtoolset/docs/api/wixtoolset.mba.core/verutilversionreleaselabel"}},c={},d=[{value:"Methods",id:"methods",level:2},{value:"Properties",id:"properties",level:2},{value:"Dispose() Method",id:"dispose_nop",level:2},{value:"Declaration",id:"declaration",level:3},{value:"HasMajor Property",id:"hasmajor",level:2},{value:"Declaration",id:"declaration-1",level:3},{value:"HasMinor Property",id:"hasminor",level:2},{value:"Declaration",id:"declaration-2",level:3},{value:"HasPatch Property",id:"haspatch",level:2},{value:"Declaration",id:"declaration-3",level:3},{value:"HasRevision Property",id:"hasrevision",level:2},{value:"Declaration",id:"declaration-4",level:3},{value:"IsInvalid Property",id:"isinvalid",level:2},{value:"Declaration",id:"declaration-5",level:3},{value:"Major Property",id:"major",level:2},{value:"Declaration",id:"declaration-6",level:3},{value:"Metadata Property",id:"metadata",level:2},{value:"Declaration",id:"declaration-7",level:3},{value:"Minor Property",id:"minor",level:2},{value:"Declaration",id:"declaration-8",level:3},{value:"Patch Property",id:"patch",level:2},{value:"Declaration",id:"declaration-9",level:3},{value:"Prefix Property",id:"prefix",level:2},{value:"Declaration",id:"declaration-10",level:3},{value:"ReleaseLabels Property",id:"releaselabels",level:2},{value:"Declaration",id:"declaration-11",level:3},{value:"Revision Property",id:"revision",level:2},{value:"Declaration",id:"declaration-12",level:3},{value:"Version Property",id:"version",level:2},{value:"Declaration",id:"declaration-13",level:3}],u={toc:d},m="wrapper";function h(e){var{components:t}=e,a=i(e,["components"]);return(0,r.kt)(m,l(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},r=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),r.forEach((function(t){n(e,t,a[t])}))}return e}({},u,a),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"verutilversion-class"},"VerUtilVersion Class"),(0,r.kt)("p",null,"An enhanced implementation of SemVer 2.0."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#dispose_nop"},"Dispose()")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#hasmajor"},"HasMajor")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Major part was specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#hasminor"},"HasMinor")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Minor part was specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#haspatch"},"HasPatch")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Patch part was specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#hasrevision"},"HasRevision")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the Revision part was specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#isinvalid"},"IsInvalid")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the version conformed to the spec.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#major"},"Major")),(0,r.kt)("td",{parentName:"tr",align:null},"For version A.B.C.D, Major is A. It is 0 if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#metadata"},"Metadata")),(0,r.kt)("td",{parentName:"tr",align:null},"For version X.Y.Z-releaselabels+metadata, Metadata is the rest of the string after +. For invalid versions, it is all of the string after the point where it was an invalid string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#minor"},"Minor")),(0,r.kt)("td",{parentName:"tr",align:null},"For version A.B.C.D, Minor is B. It is 0 if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#patch"},"Patch")),(0,r.kt)("td",{parentName:"tr",align:null},"For version A.B.C.D, Patch is C. It is 0 if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#prefix"},"Prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix character that was stripped from ",(0,r.kt)("inlineCode",{parentName:"td"},"Version")," , or the null character if there was no prefix.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#releaselabels"},"ReleaseLabels")),(0,r.kt)("td",{parentName:"tr",align:null},"For version X.Y.Z-releaselabels+metadata, ReleaseLabels is the parsed information for releaselabels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#revision"},"Revision")),(0,r.kt)("td",{parentName:"tr",align:null},"For version A.B.C.D, Revision is D. It is 0 if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#version"},"Version")),(0,r.kt)("td",{parentName:"tr",align:null},"String version, which would have stripped the leading 'v'.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"WixToolset.Mba.Core.dll")," version ",(0,r.kt)("inlineCode",{parentName:"p"},"4.0.5+b9b2f1b4c69a1b509d487dc950b30b4ec9b0d040")),(0,r.kt)("h2",{id:"dispose_nop"},"Dispose() Method"),(0,r.kt)("h3",{id:"declaration"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void Dispose()\n")),(0,r.kt)("h2",{id:"hasmajor"},"HasMajor Property"),(0,r.kt)("p",null,"Whether the Major part was specified."),(0,r.kt)("h3",{id:"declaration-1"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool HasMajor { get; set; } \n")),(0,r.kt)("h2",{id:"hasminor"},"HasMinor Property"),(0,r.kt)("p",null,"Whether the Minor part was specified."),(0,r.kt)("h3",{id:"declaration-2"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool HasMinor { get; set; } \n")),(0,r.kt)("h2",{id:"haspatch"},"HasPatch Property"),(0,r.kt)("p",null,"Whether the Patch part was specified."),(0,r.kt)("h3",{id:"declaration-3"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool HasPatch { get; set; } \n")),(0,r.kt)("h2",{id:"hasrevision"},"HasRevision Property"),(0,r.kt)("p",null,"Whether the Revision part was specified."),(0,r.kt)("h3",{id:"declaration-4"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool HasRevision { get; set; } \n")),(0,r.kt)("h2",{id:"isinvalid"},"IsInvalid Property"),(0,r.kt)("p",null,"Whether the version conformed to the spec."),(0,r.kt)("h3",{id:"declaration-5"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsInvalid { get; set; } \n")),(0,r.kt)("h2",{id:"major"},"Major Property"),(0,r.kt)("p",null,"For version A.B.C.D, Major is A. It is 0 if not specified."),(0,r.kt)("h3",{id:"declaration-6"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.UInt32 Major { get; set; } \n")),(0,r.kt)("h2",{id:"metadata"},"Metadata Property"),(0,r.kt)("p",null,"For version X.Y.Z-releaselabels+metadata, Metadata is the rest of the string after +. For invalid versions, it is all of the string after the point where it was an invalid string."),(0,r.kt)("h3",{id:"declaration-7"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public string Metadata { get; set; } \n")),(0,r.kt)("h2",{id:"minor"},"Minor Property"),(0,r.kt)("p",null,"For version A.B.C.D, Minor is B. It is 0 if not specified."),(0,r.kt)("h3",{id:"declaration-8"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.UInt32 Minor { get; set; } \n")),(0,r.kt)("h2",{id:"patch"},"Patch Property"),(0,r.kt)("p",null,"For version A.B.C.D, Patch is C. It is 0 if not specified."),(0,r.kt)("h3",{id:"declaration-9"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.UInt32 Patch { get; set; } \n")),(0,r.kt)("h2",{id:"prefix"},"Prefix Property"),(0,r.kt)("p",null,"Prefix character that was stripped from ",(0,r.kt)("inlineCode",{parentName:"p"},"Version")," , or the null character if there was no prefix."),(0,r.kt)("h3",{id:"declaration-10"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.Char Prefix { get; set; } \n")),(0,r.kt)("h2",{id:"releaselabels"},"ReleaseLabels Property"),(0,r.kt)("p",null,"For version X.Y.Z-releaselabels+metadata, ReleaseLabels is the parsed information for releaselabels."),(0,r.kt)("h3",{id:"declaration-11"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public VerUtilVersionReleaseLabel[] ReleaseLabels { get; set; } \n")),(0,r.kt)("h2",{id:"revision"},"Revision Property"),(0,r.kt)("p",null,"For version A.B.C.D, Revision is D. It is 0 if not specified."),(0,r.kt)("h3",{id:"declaration-12"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.UInt32 Revision { get; set; } \n")),(0,r.kt)("h2",{id:"version"},"Version Property"),(0,r.kt)("p",null,"String version, which would have stripped the leading 'v'."),(0,r.kt)("h3",{id:"declaration-13"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public string Version { get; set; } \n")))}h.isMDXComponent=!0}}]);