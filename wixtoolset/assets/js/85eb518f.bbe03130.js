"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[37969],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},32220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>p,toc:()=>c});n(67294);var a=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const o={wip:5433,type:"Feature",by:"Heath Stewart (heaths at microsoft.com)",title:"Add support to detect and install VSIX packages into VS2017"},s=void 0,p={unversionedId:"development/wips/add-support-to-detect-and-install-vsix-packages-into-vs15",id:"development/wips/add-support-to-detect-and-install-vsix-packages-into-vs15",title:"Add support to detect and install VSIX packages into VS2017",description:"User stories",source:"@site/docs/development/wips/5433-add-support-to-detect-and-install-vsix-packages-into-vs15.md",sourceDirName:"development/wips",slug:"/development/wips/add-support-to-detect-and-install-vsix-packages-into-vs15",permalink:"/wixtoolset/docs/development/wips/add-support-to-detect-and-install-vsix-packages-into-vs15",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/docs/development/wips/5433-add-support-to-detect-and-install-vsix-packages-into-vs15.md",tags:[],version:"current",sidebarPosition:5433,frontMatter:{wip:5433,type:"Feature",by:"Heath Stewart (heaths at microsoft.com)",title:"Add support to detect and install VSIX packages into VS2017"},sidebar:"docsSidebar",previous:{title:"Support MSI transactions",permalink:"/wixtoolset/docs/development/wips/support-msi-transactions"},next:{title:"Repository Reorganization",permalink:"/wixtoolset/docs/development/wips/repository-reorganization"}},d={},c=[{value:"User stories",id:"user-stories",level:2},{value:"Background",id:"background",level:2},{value:"Proposal",id:"proposal",level:2},{value:"Properties",id:"properties",level:3},{value:"Elements",id:"elements",level:3},{value:"Tables",id:"tables",level:3},{value:"Custom actions",id:"custom-actions",level:3},{value:"Immediate custom action",id:"immediate-custom-action",level:4},{value:"Error message",id:"error-message",level:5},{value:"Deferred custom action",id:"deferred-custom-action",level:4},{value:"Considerations",id:"considerations",level:2},{value:"Harvest workload and component IDs from VSIX packages",id:"harvest-workload-and-component-ids-from-vsix-packages",level:3},{value:"Nested MSI sessions",id:"nested-msi-sessions",level:3},{value:"MSI messages",id:"msi-messages",level:3},{value:"BA functions",id:"ba-functions",level:3},{value:"See Also",id:"see-also",level:2}],u={toc:c},m="wrapper";function k(e){var{components:t}=e,n=l(e,["components"]);return(0,a.kt)(m,r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){i(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"user-stories"},"User stories"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"As a developer I can detect if VS2017 (VS15) is installed and, if needed, where it is installed."),(0,a.kt)("li",{parentName:"ul"},"As a developer I can declare required workloads that must be installed to install my VSIX package."),(0,a.kt)("li",{parentName:"ul"},"As a developer I can install my extension into multiple instances of VS2017.")),(0,a.kt)("h2",{id:"background"},"Background"),(0,a.kt)("p",null,"VS2017 deployment was redesigned from the ground up to be lighter and allow for multiple instances to be installed.\nThe default installation - providing faster start times, syntax highlighting of many languages, and more - is evidence of this."),(0,a.kt)("p",null,"However, to achieve this a number of features were changed, and use of Windows Installer packages and even registry entries\nwere drastically reduced. As such, no longer will simple registry, component, or file system searches work. The ",(0,a.kt)("em",{parentName:"p"},"WixVSExtension"),"\nwill need to be updated to work with VS2017."),(0,a.kt)("h2",{id:"proposal"},"Proposal"),(0,a.kt)("p",null,"A fast ",(0,a.kt)("a",{parentName:"p",href:"https://aka.ms/setup/configuration/docs"},"COM API")," was created to enumerate products installed by the new deployment engine. This does mean that a custom action\nwill need to be executed to set properties. The in ability to create an instance of the COM class - when ",(0,a.kt)("inlineCode",{parentName:"p"},"CoCreateInstance")," returns\n",(0,a.kt)("inlineCode",{parentName:"p"},"REGDB_E_CLASSNOTREG")," - means that no instances are installed in a supported manner."),(0,a.kt)("p",null,"Because VSIX extensions can be installed to different instances with different workloads and/or components installed, more of the\nprocess to install extensions will move to install time."),(0,a.kt)("p",null,"The existing ",(0,a.kt)("em",{parentName:"p"},"VS15.wxs")," will be removed since it did not work with any public pre-releases of VS2017, and will be replaced by a new\n",(0,a.kt)("em",{parentName:"p"},"VS2017.wxs")," file. Packages using ",(0,a.kt)("em",{parentName:"p"},"VS15.wxs")," will fail to link and will need to update references to ",(0,a.kt)("em",{parentName:"p"},"VS2017.wxs"),"."),(0,a.kt)("h3",{id:"properties"},"Properties"),(0,a.kt)("p",null,"Given how the existing VS-related properties from the ",(0,a.kt)("em",{parentName:"p"},"WixVSExtension"),' are used and limitations in how Windows Installer works\nwith properties, the properties defined for VS2017 can only point to one location. For most end users this is expected to be fine.\nHowever, there is currently no concept of a "default instance". Instead, the highest constrained version (e.g. the highest 15.0\nfor VS2017) and the latest if multiple instances of the same version (i.e. most recently installed) will be used.'),(0,a.kt)("p",null,"To get the root ",(0,a.kt)("inlineCode",{parentName:"p"},"VS2017_ROOT_FOLDER"),", the custom action will enumerate instances searching for one or more of the following product IDs."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Microsoft.VisualStudio.Product.Enterprise"),(0,a.kt)("li",{parentName:"ul"},"Microsoft.VisualStudio.Product.Professional"),(0,a.kt)("li",{parentName:"ul"},"Microsoft.VisualStudio.Product.Community")),(0,a.kt)("p",null,"The custom action will be scheduled before ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSearch")," so that existing ",(0,a.kt)("inlineCode",{parentName:"p"},"DirectorySearch")," elements can be used to find\nsub-folders for properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017_EXTENSIONS_DIR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017_PROJECTTEMPLATES_DIR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017_SCHEMAS_DIR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017_ITEMTEPLATES_DIR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017_BOOTSTRAPPER_PACKAGE_FOLDER")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017DEVENV"))),(0,a.kt)("p",null,"With the ",(0,a.kt)("inlineCode",{parentName:"p"},"VS2017DEVENV")," property set, the following custom action definitions should continue to work as defined."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017Setup")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VS2017InstallVSTemplates"))),(0,a.kt)("p",null,"Project system properties will be supported by detecting the related component IDs."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Component ID"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_VC_PROJECTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.Component.VC.CoreIde")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_VCSHARP_PROJECTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.Component.Roslyn.LanguageServices")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_VB_PROJECTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.Component.Roslyn.LanguageServices")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_FSHARP_PROJECTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.Component.FSharp")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_MODELING_PROJECTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.PackageGroup.DslRuntime")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_VSTS_TESTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.Component.TestTools.Core")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"VS2017_IDE_VWD_PROJECTSYSTEM_INSTALLED")),(0,a.kt)("td",{parentName:"tr",align:null},"Microsoft.VisualStudio.Component.Web")))),(0,a.kt)("p",null,"Note there is no separate component for the modeling tools (DSL). This ID could change in the future."),(0,a.kt)("p",null,"A new property ",(0,a.kt)("inlineCode",{parentName:"p"},"VS_INSTANCES_ID")," will be supported and represents a comma-delimited list of instance IDs. End users via the command line\nor BAs could discover instance IDs ahead of time to determine this list and pass this property to the MSI. Because this is an explicit action,\nit is assumed that the client is taking responsibility for selection and this value will override all ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," properties as described below.\nThis will be defined at build time as a secure custom property, but will not be defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Property")," table specifically."),(0,a.kt)("p",null,"Because the ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," properties will also be secure custom properties, clients can also pass different instance IDs to each property\nindividually if required and instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"VS_INSTANCE_IDS"),". While supported, this is not assumed to be atypical."),(0,a.kt)("h3",{id:"elements"},"Elements"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," table will be updated to support authoring of an optional ",(0,a.kt)("inlineCode",{parentName:"p"},"Id")," attribute. If not specified, this will be generated\nusing the ",(0,a.kt)("inlineCode",{parentName:"p"},"GenerateIdentifier"),' method accepting "vsx" as the prefix, and the component ID and file ID as input. This ',(0,a.kt)("inlineCode",{parentName:"p"},"Id")," attribute\nis used to relate the package to workload and component package IDs on which the package depends. This information could also be harvested."),(0,a.kt)("p",null,"The existing ",(0,a.kt)("inlineCode",{parentName:"p"},"Target")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"TargetVersion")," attributes can still be specified but are ignored when the ",(0,a.kt)("inlineCode",{parentName:"p"},"/instanceIds")," switch is passed\nto ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe"),". This will maintain backward compatibility for the custom actions with older versions of VS if VS2017 or newer is not installed."),(0,a.kt)("p",null,"The existing ",(0,a.kt)("inlineCode",{parentName:"p"},"Vital")," attribute will also be stored in a new ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," table as described below to keep track of which packages require instances.\nPackages that are not vital will not cause the installation to err if no compatible instances are found. This is analogous to existing behavior with\nolder versions of VS if a package failed to install, which could be because it is not compatible with an edition and was not authored appropriately."),(0,a.kt)("p",null,"A new, optional ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," attribute is added. If not specified, this will be the uppercase version of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Id")," attribute which is a valid\nproperty ID. This property will be added to the secure custom properties list because it can be passed to the client and must be passed through to the server."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," element will also accept one or more child elements named ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixDependency")," like in the following example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<vs:VsixPackage Id="Optional ID; otherwise, generated" ActionProperty="Optional property; otherwise, uppercase Id" ...>\n  <vs:Requires Id="Workload Or Component ID" Version="Optional version or version range" Chip="Optional chip" Language="Optional language" Branch="Optional branch" />\n</vs:VsixPackage>\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Id")," attribute is required, but all other attributes are optional. The ",(0,a.kt)("inlineCode",{parentName:"p"},"Version"),' can be a single version number like "1.2.3.4" or a range\nusing the same syntax as VSIX and NuGet packages like "[1.0,2.0)". Because the attributes are treated as opaque values, the ',(0,a.kt)("inlineCode",{parentName:"p"},"Language")," attribute\nshould be in the format ",(0,a.kt)("em",{parentName:"p"},"language","_","Locale")," as with web standards."),(0,a.kt)("h3",{id:"tables"},"Tables"),(0,a.kt)("p",null,"Until now the ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," element was compiled directly into custom actions; however, to fail the installation if a compatible instance\nis not found for a package where ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage/@Vital")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"yes")," (default), we need to remember that. To be robust, this will be tracked in an\n",(0,a.kt)("inlineCode",{parentName:"p"},"Attributes")," column. This will allow for other binary attributes to be stored without table schema changes. All rows will be processed without\nconsidering the parent component state because the custom action will enumerate instances only once as an optimization."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," table would have the following schema."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"VsixPackage"),(0,a.kt)("td",{parentName:"tr",align:null},"s72"),(0,a.kt)("td",{parentName:"tr",align:null},"The row primary key. This is generated if not authored as described above.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Component_"),(0,a.kt)("td",{parentName:"tr",align:null},"s72"),(0,a.kt)("td",{parentName:"tr",align:null},"Required parent component ID. Not currently used but could be, and table schemas can only grow. Could be useful for static analysis.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PackageId"),(0,a.kt)("td",{parentName:"tr",align:null},"s255"),(0,a.kt)("td",{parentName:"tr",align:null},"Required package ID used for reporting.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ActionProperty"),(0,a.kt)("td",{parentName:"tr",align:null},"s72"),(0,a.kt)("td",{parentName:"tr",align:null},"Required per-package property will be set to comma-delimited list of compatible instance IDs.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Attributes"),(0,a.kt)("td",{parentName:"tr",align:null},"I4"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional attributes including Vital (1).")))),(0,a.kt)("p",null,"If any ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixDependency")," elements are authored, the related ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage/@Id")," is associated with the specified package references in a table\nwith the schema as follows. The column values are treated as opaque values processed by the custom action directly and compared as documented."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"VsixPackage_"),(0,a.kt)("td",{parentName:"tr",align:null},"s72"),(0,a.kt)("td",{parentName:"tr",align:null},"Foreign key reference to related ",(0,a.kt)("inlineCode",{parentName:"td"},"VsixPackage")," row.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Id"),(0,a.kt)("td",{parentName:"tr",align:null},"s255"),(0,a.kt)("td",{parentName:"tr",align:null},"Required workload or component ID.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Version"),(0,a.kt)("td",{parentName:"tr",align:null},"S50"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional version or version range.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Chip"),(0,a.kt)("td",{parentName:"tr",align:null},"S10"),(0,a.kt)("td",{parentName:"tr",align:null},'Optional chip such as "x86" or "x64".')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Language"),(0,a.kt)("td",{parentName:"tr",align:null},"S10"),(0,a.kt)("td",{parentName:"tr",align:null},'Optional language identifier like "en-US" or "ja-JP".')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Branch"),(0,a.kt)("td",{parentName:"tr",align:null},"S20"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional branch identifier. Not typical but supported by the engine.")))),(0,a.kt)("h3",{id:"custom-actions"},"Custom actions"),(0,a.kt)("p",null,"Two sets of custom actions are used to discover compatible instances, and to execute ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," to install extensions into those\ninstances of VS2017 or newer, or versions and editions of previous VS releases."),(0,a.kt)("h4",{id:"immediate-custom-action"},"Immediate custom action"),(0,a.kt)("p",null,"An immediate custom action will both set properties and enumerate instances, if required. Initially, this custom action will only\nset ",(0,a.kt)("inlineCode",{parentName:"p"},"VS2017_ROOT_FOLDER")," as described above but should be updated as future versions are released. It will run before ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSearch")," so that derivative\nproperties can use the root folder to search for subdirectories. The related ",(0,a.kt)("inlineCode",{parentName:"p"},"DirectorySearch")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"FileSearch")," elements will be authored into ",(0,a.kt)("em",{parentName:"p"},"VSIX2017.wxs"),"\nsimilar to previous releases' authoring."),(0,a.kt)("p",null,"It will also process the ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," table - if it exists - and find compatible instances if the ",(0,a.kt)("inlineCode",{parentName:"p"},"VS_INSTANCE_IDS")," property is not set\nusing related rows from the ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixDependency")," table that relates a ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," row to a collection of workload and component IDs."),(0,a.kt)("p",null,"The custom action will call ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupConfiguration2::EnumAllInstances")," to query all instances regardless of the ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupInstance::GetState")," result.\nWhile enumerating, the version is considered. The version is parsed using ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupHelper::ParseVersion"),", where ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupHelper")," is QI'd from\n",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupConfiguration"),". For VS2017, the highest version of 15.0 will be kept as well as the latest installed from ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupInstance::GetInstallDate"),".\nThe latest install of the highest version wil be used to set the ",(0,a.kt)("inlineCode",{parentName:"p"},"VS2017_ROOT_FOLDER")," (for the highest 15.0 version), and the\n",(0,a.kt)("inlineCode",{parentName:"p"},"VS2017_VSIX_INSTALLER_PATH")," using combining the result of ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupInstance2::GetEnginePath"),' of "VSIXInstaller.exe". ',(0,a.kt)("em",{parentName:"p"},"VsixPackage.wxs")," will be updated\nto add another ",(0,a.kt)("inlineCode",{parentName:"p"},"SetProperty")," element to set ",(0,a.kt)("inlineCode",{parentName:"p"},"VS_VSIX_INSTALLER_PATH")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"VS2017_VSIX_INSTALLER_PATH"),", if set."),(0,a.kt)("p",null,"For each instance, the CA will check for each workload and component ID in the ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixDependency")," table and keep track of which instances contain each ID.\nAfter enumeration is complete, instances that contain all workload and component IDs for a package are set in the associated row's ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty"),"\nas a comma-separated list of instance IDs. The deferred custom action below uses this property in its condition whether to run,\nas well as the command line as described above. If the package is attributed as ",(0,a.kt)("inlineCode",{parentName:"p"},"Vital")," and its ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," is not set,\nthe custom action will log a custom error message and exit with an error. This is necessary because the deferred custom actions\nare conditioned on that property as described below and would not run if the property is not set."),(0,a.kt)("h5",{id:"error-message"},"Error message"),(0,a.kt)("p",null,"The WixVSExtension will define an error message in ",(0,a.kt)("em",{parentName:"p"},"src","\\","libs","\\","wcautil","\\","custommsierrors.h")," in the range 27101 to 27200."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ID"),(0,a.kt)("th",{parentName:"tr",align:null},"Message"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"msierrVSNoInstances"),(0,a.kt)("td",{parentName:"tr",align:null},'No compatible instances found for package "',"[2]",'".'),(0,a.kt)("td",{parentName:"tr",align:null},"[2]"," is the ",(0,a.kt)("inlineCode",{parentName:"td"},"PackageId")," column value.")))),(0,a.kt)("h4",{id:"deferred-custom-action"},"Deferred custom action"),(0,a.kt)("p",null,"The existing custom actions generated at compile time will be used. These are generated per-package in a declarative manner.\nTo support installing extensions to specified or discovered compatible instances, associated ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage")," table rows' ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty"),'\nwill be used in the command line like so: "{/instanceIds',"[",(0,a.kt)("em",{parentName:"p"},"ActionProperty"),"]",'}". This means if the ',(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," is defined, the\n",(0,a.kt)("inlineCode",{parentName:"p"},"/instanceIds")," command line switch is passed to ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," which takes precedence over the existing ",(0,a.kt)("inlineCode",{parentName:"p"},"/skuName")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"/skuVersion")," switches.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," will also be used in the custom action's ",(0,a.kt)("inlineCode",{parentName:"p"},"Condition")," column in the ",(0,a.kt)("inlineCode",{parentName:"p"},"InstallExecuteSequence")," table so that if no instances\nwere found, the custom action will not run."),(0,a.kt)("p",null,"The scheduling of these custom actions will not change."),(0,a.kt)("h2",{id:"considerations"},"Considerations"),(0,a.kt)("p",null,"The following sections are from discussions within Microsoft for issues we have considered but seek feedback from the community.\nThese could be done incrementally after the base feature work proposed above."),(0,a.kt)("h3",{id:"harvest-workload-and-component-ids-from-vsix-packages"},"Harvest workload and component IDs from VSIX packages"),(0,a.kt)("p",null,"Because installing VSIX packages without required workloads and instances will install them to all installed instances (at least for\ncompatible package IDs authored into the package manifest itself). This will install any dependent workloads and/or components.\nSo it's best to harvest these IDs from VSIX packages if they are available."),(0,a.kt)("p",null,"VSIX packages are based on the Open Packaging Convention (OPC), which use a ZIP container format. In the root of the package is a ",(0,a.kt)("em",{parentName:"p"},"manifest.json"),"\nfile that contains a ",(0,a.kt)("inlineCode",{parentName:"p"},"dependencies")," object property. The keys are dependent package IDs that contain all the same values as the columns in\nthe new ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixDependency")," table and can be harvested directly, like in the following example."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "a": "",\n    "b": "[1.0,2.0)",\n    "c": {\n      "version": "[1.0,2.0)",\n      "chip": "x86",\n      "language": "en-US",\n      "branch": "develop"\n    }\n  }\n}\n')),(0,a.kt)("p",null,'All three examples are supported, where package "a" specifies only an ID, "b" declares a dependent version range, and "c" declares all supported\npackage reference attributes. These would map to rows like in the following example.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<vs:VsixPackage PackageId="Example">\n  <vs:Requires Id="a" />\n  <vs:Requires Id="b" Version="[1.0,2.0)" />\n  <vs:Requires Id="c" Version="[1.0,2.0)" Chip="x86" Language="en-US" Branch="develop" />\n</vs:VsixPackage>\n')),(0,a.kt)("h3",{id:"nested-msi-sessions"},"Nested MSI sessions"),(0,a.kt)("p",null,"When an MSI invokes ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," targeting VS2017, if any workloads or components are installed that also install MSIs, the session will fail.\nMicrosoft is considering a change to ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," to accept a command line parameter when run from within an MSI when ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe"),"\nwas found by the CAs documented herein, and when passed will determine if any MSIs will be installed / repaired and exit immediately with an error\ncode we would map back to to a custom message like the following example."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ID"),(0,a.kt)("th",{parentName:"tr",align:null},"Message"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"msierrNestedInstall"),(0,a.kt)("td",{parentName:"tr",align:null},'Cannot install "',"[2]",'" because it will trigger an unsupported install.'),(0,a.kt)("td",{parentName:"tr",align:null},"[2]"," is the path to the VSIX package.")))),(0,a.kt)("p",null,"An installer could also use the value of field 2 to ",(0,a.kt)("inlineCode",{parentName:"p"},"ShellExecute")," it or allow the user to do it. ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," will prompt into which\nversions, editions, and instances of all installed Visual Studio products to install."),(0,a.kt)("p",null,"Additionally, if bundle authoring were expanded to allow custom package authoring elements, we could create compiler support for a ",(0,a.kt)("inlineCode",{parentName:"p"},"VsixPackage"),"\nelement that compiles to an ",(0,a.kt)("inlineCode",{parentName:"p"},"ExePackage")," but would drop an EXE (perhaps embedded in ",(0,a.kt)("inlineCode",{parentName:"p"},"WixVSExtension.dll")," if a single-file extension is required)\nthat calls the query APIs to find ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," and forwards the command line. This would be a simple shortcut for package developers\nand would move invocation of the ",(0,a.kt)("em",{parentName:"p"},"VSIXInstaller.exe")," out of MSIs without additional support required in Burn."),(0,a.kt)("h3",{id:"msi-messages"},"MSI messages"),(0,a.kt)("p",null,"To support external UI handlers for single MSI installs, the custom actions could send messages for all instances - mapping to the ",(0,a.kt)("inlineCode",{parentName:"p"},"VSIX_INSTANCE_IDS"),"\nproperty - and/or each individual instance using package rows' ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," properties. The InstanceId, DisplayName, Nickname (optional property),\nand InstallationPath properties would be packaged into message data to be displayed by the external  UI handler."),(0,a.kt)("p",null,"The DisplayName would be selected by passing the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProductLanguage")," MSI property to ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupConfiguration::GetDisplayName")," as the ",(0,a.kt)("inlineCode",{parentName:"p"},"lcid")," parameter.\nIf the language is not supported, the English (US) (1033) DisplayName is returned."),(0,a.kt)("h3",{id:"ba-functions"},"BA functions"),(0,a.kt)("p",null,"Because it's most likely a Burn bundle will install multiple MSIs, it would only make sense to define a BA function that enumerates instances\nand can provide the UI with the InstanceId, DisplayName, Nickname (optional property), and InstallationPath so that the UI can present display\ninformation to the user and pass back selected the InstanceIds via either the global ",(0,a.kt)("inlineCode",{parentName:"p"},"VS_INSTANCE_IDS")," or individual ",(0,a.kt)("inlineCode",{parentName:"p"},"ActionProperty")," properties."),(0,a.kt)("p",null,"The DisplayName would be selected by passing in the locale used by the BA to ",(0,a.kt)("inlineCode",{parentName:"p"},"ISetupConfiguration::GetDisplayName")," as the ",(0,a.kt)("inlineCode",{parentName:"p"},"lcid")," parameter.\nIf the language is not supported, the English (US) (1033) DisplayName is returned."),(0,a.kt)("h2",{id:"see-also"},"See Also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/wixtoolset/issues/issues/5433"},"WIXFEAT:5433 - Add support to detect and install VSIX packages into VS15"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://blogs.msdn.microsoft.com/heaths/2016/09/15/changes-to-visual-studio-15-setup/"},'Changes to Visual Studio "15" Setup'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://blogs.msdn.microsoft.com/visualstudio/2016/11/10/extensibility-in-visual-studio-15-increasing-reliability-and-performance/"},'Extensibility in Visual Studio "15": Increasing Reliability and Performance'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://aka.ms/setup/configuration/docs"},"Setup Configuration API documentation")))))}k.isMDXComponent=!0}}]);