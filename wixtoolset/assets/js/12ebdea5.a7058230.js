"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[30692],{3905:(t,e,l)=>{l.d(e,{Zo:()=>h,kt:()=>c});var n=l(67294);function i(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function r(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}function s(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{};e%2?r(Object(l),!0).forEach((function(e){i(t,e,l[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(l,e))}))}return t}function a(t,e){if(null==t)return{};var l,n,i=function(t,e){if(null==t)return{};var l,n,i={},r=Object.keys(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||(i[l]=t[l]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(i[l]=t[l])}return i}var u=n.createContext({}),o=function(t){var e=n.useContext(u),l=e;return t&&(l="function"==typeof t?t(e):s(s({},e),t)),l},h=function(t){var e=o(t.components);return n.createElement(u.Provider,{value:e},t.children)},k="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},b=n.forwardRef((function(t,e){var l=t.components,i=t.mdxType,r=t.originalType,u=t.parentName,h=a(t,["components","mdxType","originalType","parentName"]),k=o(l),b=i,c=k["".concat(u,".").concat(b)]||k[b]||p[b]||r;return l?n.createElement(c,s(s({ref:e},h),{},{components:l})):n.createElement(c,s({ref:e},h))}));function c(t,e){var l=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=l.length,s=new Array(r);s[0]=b;var a={};for(var u in e)hasOwnProperty.call(e,u)&&(a[u]=e[u]);a.originalType=t,a[k]="string"==typeof t?t:i,s[1]=a;for(var o=2;o<r;o++)s[o]=l[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,l)}b.displayName="MDXCreateElement"},5355:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>h,contentTitle:()=>u,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>k});l(67294);var n=l(3905);function i(t,e,l){return e in t?Object.defineProperty(t,e,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[e]=l,t}function r(t,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):function(t,e){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),l.push.apply(l,n)}return l}(Object(e)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(e,l))})),t}function s(t,e){if(null==t)return{};var l,n,i=function(t,e){if(null==t)return{};var l,n,i={},r=Object.keys(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||(i[l]=t[l]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)l=r[n],e.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(i[l]=t[l])}return i}const a={title:"Light Task",layout:"documentation"},u="Light Task",o={unversionedId:"msbuild/task_reference/light",id:"version-v3/msbuild/task_reference/light",title:"Light Task",description:"The Light task wraps light.exe, the WiX linker. It supports a variety of settings that are described in more detail below. To control these settings in your .wixproj file, you can create a PropertyGroup and specify the settings that you want to use for your build process. The following is a sample PropertyGroup that contains settings that will be used by the Light task:",source:"@site/versioned_docs/version-v3/msbuild/task_reference/light.md",sourceDirName:"msbuild/task_reference",slug:"/msbuild/task_reference/light",permalink:"/wixtoolset/docs/v3/msbuild/task_reference/light",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/versioned_docs/version-v3/msbuild/task_reference/light.md",tags:[],version:"v3",frontMatter:{title:"Light Task",layout:"documentation"}},h={},k=[],p={toc:k},b="wrapper";function c(t){var{components:e}=t,l=s(t,["components"]);return(0,n.kt)(b,r(function(t){for(var e=1;e<arguments.length;e++){var l=null!=arguments[e]?arguments[e]:{},n=Object.keys(l);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(l).filter((function(t){return Object.getOwnPropertyDescriptor(l,t).enumerable})))),n.forEach((function(e){i(t,e,l[e])}))}return t}({},p,l),{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"light-task"},"Light Task"),(0,n.kt)("p",null,"The Light task wraps ",(0,n.kt)("a",{parentName:"p",href:"/wixtoolset/docs/v3/overview/light"},"light.exe"),", the WiX linker. It supports a variety of settings that are described in more detail below. To control these settings in your .wixproj file, you can create a PropertyGroup and specify the settings that you want to use for your build process. The following is a sample PropertyGroup that contains settings that will be used by the Light task:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml"},"<PropertyGroup>\n  <LinkerTreatWarningsAsErrors>False</LinkerTreatWarningsAsErrors>\n  <LinkerVerboseOutput>True</LinkerVerboseOutput>\n  <SuppressIces>ICE18;ICE45;ICE82</SuppressIces>\n  <SuppressSpecificWarnings>1111</SuppressSpecificWarnings>\n  <TreatSpecificWarningsAsErrors>2222</TreatSpecificWarningsAsErrors>\n  <WixVariables>Variable1=value1;Variable2=value2</WixVariables>\n</PropertyGroup>\n")),(0,n.kt)("p",null,"The following table describes the common WiX MSBuild parameters that are applicable to the ",(0,n.kt)("b",null,"Light")," task."),(0,n.kt)("table",{border:"1",cellspacing:"0",cellpadding:"4"},(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"Parameter")),(0,n.kt)("td",null,(0,n.kt)("b",null,"Description"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"BindInputPaths")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies a binder path that should be used to locate all files. This is equivalent to the -b <path> switch.",(0,n.kt)("br",null),'Named BindPaths are created by prefixing the 2-or-more-character bucket name followed by an equal sign ("=") to the supplied path.')),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"BindFiles")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the tool should bind files into a .wixout file. This is only valid when the OutputAsXml parameter is also provided. This is equivalent to the -bf switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"Pedantic")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the tool should display pedantic messages. This is equivalent to the -pedantic switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressAllWarnings")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that all warnings should be suppressed. This is equivalent to the -sw switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressIntermediateFileVersionMatching")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the tool should suppress intermediate file version mismatch checking. This is equivalent to the -sv switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressSchemaValidation")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that schema validation of documents should be suppressed. This is equivalent to the -ss switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressSpecificWarnings")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that certain warnings should be suppressed. This is equivalent to the -sw[N] switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"TreatSpecificWarningsAsErrors")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that certain warnings should be treated as errors. This is equivalent to the -wx[N] switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"TreatWarningsAsErrors")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that all warnings should be treated as errors. This is equivalent to the -wx switch.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"VerboseOutput")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the tool should provide verbose output. This is equivalent to the -v switch."))),(0,n.kt)("p",null,"The following table describes the parameters that are specific to the ",(0,n.kt)("b",null,"Light")," task."),(0,n.kt)("table",{border:"1",cellspacing:"0",cellpadding:"4"},(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"Parameter")),(0,n.kt)("td",null,(0,n.kt)("b",null,"Description"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"AllowIdenticalRows")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should allow identical rows. Identical rows will be treated as warnings. This is equivalent to the -ai switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"AllowDuplicateDirectoryIds")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<td>Optional <b>boolean</b> parameter.<br />\n<br />\nSpecifies that the linker should allow duplicate directory identifiers. This allows duplicate directories from different libraries to be merged into the product. This is equivalent to the -ad switch in light.exe.</td>\n"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"AllowUnresolvedReferences")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should allow unresolved references. This will not create valid output. This is equivalent to the -au switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"AdditionalCub")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies an additional .cub file that the linker should use when running ICE validation. This is equivalent to the -cub <file.cub> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"BackwardsCompatibleGuidGeneration")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should use the backward compatible GUID generation algorithm. This is equivalent to the -bcgg switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"CabinetCachePath")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies a path that the linker should use to cache built cabinet files. This is equivalent to the -cc <path> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"CabinetCreationThreadCount")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"integer")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that number of threads that the linker should use when building cabinet files. This is equivalent to the -ct <N> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"Cultures")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies a semicolon or comma delimited list of localized string cultures to load from .wxl files and libraries.  Precedence of cultures is from left to right. This is equivalent to the -cultures:<cultures> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"DefaultCompressionLevel")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies the compression level that the linker should use when building cabinet files. Valid values are low, medium, high, none and mszip. This is equivalent to the -dcl:<level> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"DropUnrealTables")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should drop unreal tables from the output image. This is equivalent to the -dut switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"ExactAssemblyVersions")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should use exact assembly versions. This is equivalent to the -eav switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"Ices")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should run specific internal consistency evaluators (ICEs). This is equivalent to the -ice:<ICE> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LeaveTemporaryFiles")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should not delete temporary files. This is equivalent to the -notidy switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerAdditionalOptions")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies additional command line parameters to append when calling light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerBindInputPaths")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies a binder path that the linker should use to locate all files. This is equivalent to the -b <path> switch in light.exe.",(0,n.kt)("br",null),'Named BindPaths are created by prefixing the 2-or-more-character bucket name followed by an equal sign ("=") to the supplied path.')),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerBindFiles")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should bind files into a .wixout file. This is only valid when the OutputAsXml parameter is also provided. This is equivalent to the -bf switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerPedantic")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should display pedantic messages. This is equivalent to the -pedantic switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerSuppressAllWarnings")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that all linker warnings should be suppressed. This is equivalent to the -sw switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerSuppressIntermediateFileVersionMatching")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress intermediate file version mismatch checking. This is equivalent to the -sv switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerSuppressSchemaValidation")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress schema validation of documents. This is equivalent to the -ss switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerSuppressSpecificWarnings")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that certain linker warnings should be suppressed. This is equivalent to the -sw[N] switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerTreatSpecificWarningsAsErrors")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that certain linker warnings should be treated as errors. This is equivalent to the -wx[N] switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerTreatWarningsAsErrors")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that all linker warnings should be treated as errors. This is equivalent to the -wx switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"LinkerVerboseOutput")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should provide verbose output. This is equivalent to the -v switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"OutputAsXml")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should output a .wixout file instead of a .msi file. This is equivalent to the -xo switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"PdbOutputFile")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should create the output .wixpdb file with the provided name. This is equivalent to the -pdbout <output.wixpdb> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"ReuseCabinetCache")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should reuse cabinet files from the cabinet cache. This is equivalent to the -reusecab switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SetMsiAssemblyNameFileVersion")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should add a fileVersion entry to the MsiAssemblyName table for each assembly. This is equivalent to the -fv switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressAclReset")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress resetting ACLs. This is useful when laying out an image to a network share. This is equivalent to the -sacl switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressAssemblies")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should not get assembly name information for assemblies. This is equivalent to the -sa switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressDefaultAdminSequenceActions")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress default admin sequence actions. This is equivalent to the -sadmin switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressDefaultAdvSequenceActions")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress default advertised sequence actions. This is equivalent to the -sadv switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressDefaultUISequenceActions")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress default UI sequence actions. This is equivalent to the -ui switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressFileHashAndInfo")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress gathering file information (hash, version, language, etc). This is equivalent to the -sh switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressFiles")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress gathering all file data. This has the same effect as setting the SuppressAssemblies adn SuppressFileHashAndInfo parameters. This is equivalent to the -sf switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressIces")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress running specific ICEs. This is equivalent to the -sice:<ICE> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressLayout")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress layout creation. This is equivalent to the -sl switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressMsiAssemblyTableProcessing")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress processing the data in the MsiAssembly table. This is equivalent to the -sma switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressPatchSequenceData")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress patch sequence data in patch XML to decrease bundle size and increase patch applicability performance (patch packages themselves are not modified).")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressPdbOutput")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress outputting .wixpdb files. This is equivalent to the -spdb switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressValidation")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress .msi and .msm validation. This is equivalent to the -sval switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"SuppressTagSectionIdAttributeOnTuples")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"boolean")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies that the linker should suppress adding the sectionId attribute on rows. This is equivalent to the -sts switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"UnreferencedSymbolsFile")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies an unreferenced symbols file that the linker should use. This is equivalent to the -usf <output.xml> switch in light.exe.")),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("b",null,"WixVariables")),(0,n.kt)("td",null,"Optional ",(0,n.kt)("b",null,"string")," parameter.",(0,n.kt)("br",null),(0,n.kt)("br",null),"Specifies a semicolon-delimited list of bind-time WiX variables. This is equivalent to the -d<name>[=<value] switch in light.exe."))))}c.isMDXComponent=!0}}]);