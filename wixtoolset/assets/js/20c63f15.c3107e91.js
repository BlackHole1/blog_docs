"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[33151],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(a),m=n,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||l;return a?r.createElement(k,i(i({ref:t},p),{},{components:a})):r.createElement(k,i({ref:t},p))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},44966:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>d,toc:()=>u});a(67294);var r=a(3905);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const o={custom_edit_url:null,toc_max_heading_level:2},s="SourceMediaList Class",d={unversionedId:"api/wixtoolset.dtf.windowsinstaller/sourcemedialist",id:"api/wixtoolset.dtf.windowsinstaller/sourcemedialist",title:"SourceMediaList Class",description:"A list of source media for an installed product or patch.",source:"@site/docs/api/wixtoolset.dtf.windowsinstaller/sourcemedialist.md",sourceDirName:"api/wixtoolset.dtf.windowsinstaller",slug:"/api/wixtoolset.dtf.windowsinstaller/sourcemedialist",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.windowsinstaller/sourcemedialist",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null,toc_max_heading_level:2},sidebar:"docsSidebar",previous:{title:"SourceList Class",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.windowsinstaller/sourcelist"},next:{title:"SummaryInfo Class",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.windowsinstaller/summaryinfo"}},p={},u=[{value:"Methods",id:"methods",level:2},{value:"Properties",id:"properties",level:2},{value:"Add() Method",id:"add_nop",level:2},{value:"Declaration",id:"declaration",level:3},{value:"Remarks",id:"remarks",level:3},{value:"Clear() Method",id:"clear_nop",level:2},{value:"Declaration",id:"declaration-1",level:3},{value:"Remarks",id:"remarks-1",level:3},{value:"Contains(diskId) Method",id:"contains_diskid",level:2},{value:"Declaration",id:"declaration-2",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return value",id:"return-value",level:3},{value:"CopyTo(array, arrayIndex) Method",id:"copyto_array_arrayindex",level:2},{value:"Declaration",id:"declaration-3",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"GetEnumerator() Method",id:"getenumerator_nop",level:2},{value:"Declaration",id:"declaration-4",level:3},{value:"Remarks",id:"remarks-2",level:3},{value:"Remove(diskId) Method",id:"remove_diskid",level:2},{value:"Declaration",id:"declaration-5",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Remarks",id:"remarks-3",level:3},{value:"Count Property",id:"count",level:2},{value:"Declaration",id:"declaration-6",level:3},{value:"IsReadOnly Property",id:"isreadonly",level:2},{value:"Declaration",id:"declaration-7",level:3}],c={toc:u},m="wrapper";function k(e){var{components:t}=e,a=i(e,["components"]);return(0,r.kt)(m,l(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},r=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),r.forEach((function(t){n(e,t,a[t])}))}return e}({},c,a),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sourcemedialist-class"},"SourceMediaList Class"),(0,r.kt)("p",null,"A list of source media for an installed product or patch."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#add_nop"},"Add()")),(0,r.kt)("td",{parentName:"tr",align:null},"Adds or updates a disk of the media source for the product or patch.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#clear_nop"},"Clear()")),(0,r.kt)("td",{parentName:"tr",align:null},"Removes all source media from the list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#contains_diskid"},"Contains(diskId)")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if the specified media disk id exists in the list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#copyto_array_arrayindex"},"CopyTo(array, arrayIndex)")),(0,r.kt)("td",{parentName:"tr",align:null},"Copies the source media info from this list into an array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#getenumerator_nop"},"GetEnumerator()")),(0,r.kt)("td",{parentName:"tr",align:null},"Enumerates the source media in the source list of the patch or product installation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#remove_diskid"},"Remove(diskId)")),(0,r.kt)("td",{parentName:"tr",align:null},"Removes a specified disk from the set of registered disks.")))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#count"},"Count")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the number of source media in the list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#isreadonly"},"IsReadOnly")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets a boolean value indicating whether the list is read-only. A SourceMediaList is never read-only.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"WixToolset.Dtf.WindowsInstaller.dll")," version ",(0,r.kt)("inlineCode",{parentName:"p"},"5.0.0+41e11442b2ca93e444b60213b5ae99dcbab787d8")),(0,r.kt)("h2",{id:"add_nop"},"Add() Method"),(0,r.kt)("p",null,"Adds or updates a disk of the media source for the product or patch."),(0,r.kt)("h3",{id:"declaration"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void Add()\n")),(0,r.kt)("h3",{id:"remarks"},"Remarks"),(0,r.kt)("p",null,"Win32 MSI API: ",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/library/en-us/msi/setup/msisourcelistaddmediadisk.asp"},"MsiSourceListAddMediaDisk")," "),(0,r.kt)("h2",{id:"clear_nop"},"Clear() Method"),(0,r.kt)("p",null,"Removes all source media from the list."),(0,r.kt)("h3",{id:"declaration-1"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void Clear()\n")),(0,r.kt)("h3",{id:"remarks-1"},"Remarks"),(0,r.kt)("p",null,"Win32 MSI API: ",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/library/en-us/msi/setup/msisourcelistclearallex.asp"},"MsiSourceListClearAllEx")," "),(0,r.kt)("h2",{id:"contains_diskid"},"Contains(diskId) Method"),(0,r.kt)("p",null,"Checks if the specified media disk id exists in the list."),(0,r.kt)("h3",{id:"declaration-2"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool Contains(\n  int diskId\n)\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"diskId"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"disk id of the media to look for")))),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bool")," true if the media exists in the list, false otherwise"),(0,r.kt)("h2",{id:"copyto_array_arrayindex"},"CopyTo(array, arrayIndex) Method"),(0,r.kt)("p",null,"Copies the source media info from this list into an array."),(0,r.kt)("h3",{id:"declaration-3"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void CopyTo(\n  MediaDisk[] array,\n  int arrayIndex\n)\n")),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"MediaDisk[]"),(0,r.kt)("td",{parentName:"tr",align:null},"destination array to be filed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"arrayIndex"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"offset into the destination array where copying begins")))),(0,r.kt)("h2",{id:"getenumerator_nop"},"GetEnumerator() Method"),(0,r.kt)("p",null,"Enumerates the source media in the source list of the patch or product installation."),(0,r.kt)("h3",{id:"declaration-4"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IEnumerator<WixToolset.Dtf.WindowsInstaller.MediaDisk> GetEnumerator()\n")),(0,r.kt)("h3",{id:"remarks-2"},"Remarks"),(0,r.kt)("p",null,"Win32 MSI API: ",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/library/en-us/msi/setup/msisourcelistenummediadisks.asp"},"MsiSourceListEnumMediaDisks")," "),(0,r.kt)("h2",{id:"remove_diskid"},"Remove(diskId) Method"),(0,r.kt)("p",null,"Removes a specified disk from the set of registered disks."),(0,r.kt)("h3",{id:"declaration-5"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool Remove(\n  int diskId\n)\n")),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"diskId"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"ID of the disk to remove")))),(0,r.kt)("h3",{id:"remarks-3"},"Remarks"),(0,r.kt)("p",null,"Win32 MSI API: ",(0,r.kt)("a",{parentName:"p",href:"http://msdn.microsoft.com/library/en-us/msi/setup/msisourcelistclearmediadisk.asp"},"MsiSourceListClearMediaDisk")," "),(0,r.kt)("h2",{id:"count"},"Count Property"),(0,r.kt)("p",null,"Gets the number of source media in the list."),(0,r.kt)("h3",{id:"declaration-6"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public int Count { get; set; } \n")),(0,r.kt)("h2",{id:"isreadonly"},"IsReadOnly Property"),(0,r.kt)("p",null,"Gets a boolean value indicating whether the list is read-only. A SourceMediaList is never read-only."),(0,r.kt)("h3",{id:"declaration-7"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsReadOnly { get; set; } \n")))}k.isMDXComponent=!0}}]);