"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[51325],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,u=m["".concat(l,".").concat(f)]||m[f]||d[f]||o;return r?n.createElement(u,i(i({ref:t},c),{},{components:r})):n.createElement(u,i({ref:t},c))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9212:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>m});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const s={custom_edit_url:null,sidebar_position:1},l="WixToolset.Dtf.Compression namespace",p={unversionedId:"api/wixtoolset.dtf.compression/index",id:"api/wixtoolset.dtf.compression/index",title:"WixToolset.Dtf.Compression namespace",description:"Classes",source:"@site/docs/api/wixtoolset.dtf.compression/index.md",sourceDirName:"api/wixtoolset.dtf.compression",slug:"/api/wixtoolset.dtf.compression/",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.compression/",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:1,frontMatter:{custom_edit_url:null,sidebar_position:1},sidebar:"docsSidebar",previous:{title:"UpgradeRow Class",permalink:"/wixtoolset/docs/api/wixtoolset.data.windowsinstaller.rows/upgraderow"},next:{title:"ArchiveException Class",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.compression/archiveexception"}},c={},m=[{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Enumerations",id:"enumerations",level:2}],d={toc:m},f="wrapper";function u(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)(f,o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},d,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"wixtoolsetdtfcompression-namespace"},"WixToolset.Dtf.Compression namespace"),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Class"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"archiveexception"},"ArchiveException")),(0,n.kt)("td",{parentName:"tr",align:null},"Base exception class for compression operations. Compression libraries should derive subclass exceptions with more specific error information relevent to the file format.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"archivefileinfo"},"ArchiveFileInfo")),(0,n.kt)("td",{parentName:"tr",align:null},"Abstract object representing a compressed file within an archive; provides operations for getting the file properties and unpacking the file.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"archivefilestreamcontext"},"ArchiveFileStreamContext")),(0,n.kt)("td",{parentName:"tr",align:null},"Provides a basic implementation of the archive pack and unpack stream context interfaces, based on a list of archive files, a default directory, and an optional mapping from internal to external file paths.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"archiveinfo"},"ArchiveInfo")),(0,n.kt)("td",{parentName:"tr",align:null},"Abstract object representing a compressed archive on disk; provides access to file-based operations on the archive.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"archiveprogresseventargs"},"ArchiveProgressEventArgs")),(0,n.kt)("td",{parentName:"tr",align:null},"Contains the data reported in an archive progress event.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"basicunpackstreamcontext"},"BasicUnpackStreamContext")),(0,n.kt)("td",{parentName:"tr",align:null},"Stream context used to extract a single file from an archive into a memory stream.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"cargostream"},"CargoStream")),(0,n.kt)("td",{parentName:"tr",align:null},"Wraps a source stream and carries additional items that are disposed when the stream is closed.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"compressionengine"},"CompressionEngine")),(0,n.kt)("td",{parentName:"tr",align:null},"Base class for an engine capable of packing and unpacking a particular compressed file format.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"duplicatestream"},"DuplicateStream")),(0,n.kt)("td",{parentName:"tr",align:null},"Duplicates a source stream by maintaining a separate position.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"offsetstream"},"OffsetStream")),(0,n.kt)("td",{parentName:"tr",align:null},"Wraps a source stream and offsets all read/write/seek calls by a given value.")))),(0,n.kt)("h2",{id:"interfaces"},"Interfaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Interface"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"ipackstreamcontext"},"IPackStreamContext")),(0,n.kt)("td",{parentName:"tr",align:null},"This interface provides the methods necessary for the \xabsee T:WixToolset.Dtf.Compression.CompressionEngine\xbb to open and close streams for archives and files. The implementor of this interface can use any kind of logic to determine what kind of streams to open and where.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"iunpackstreamcontext"},"IUnpackStreamContext")),(0,n.kt)("td",{parentName:"tr",align:null},"This interface provides the methods necessary for the \xabsee T:WixToolset.Dtf.Compression.CompressionEngine\xbb to open and close streams for archives and files. The implementor of this interface can use any kind of logic to determine what kind of streams to open and where")))),(0,n.kt)("h2",{id:"enumerations"},"Enumerations"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Enumeration"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"archiveprogresstype"},"ArchiveProgressType")),(0,n.kt)("td",{parentName:"tr",align:null},"The type of progress event.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"compressionlevel"},"CompressionLevel")),(0,n.kt)("td",{parentName:"tr",align:null},"Specifies the compression level ranging from minimum compresion to maximum compression, or no compression at all.")))))}u.isMDXComponent=!0}}]);