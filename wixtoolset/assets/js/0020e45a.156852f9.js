"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[70988],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),p=r,b=m["".concat(s,".").concat(p)]||m[p]||u[p]||o;return n?a.createElement(b,i(i({ref:t},c),{},{components:n})):a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},62778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>m});n(67294);var a=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const l={wip:4719,type:"Feature",by:"Bob Arnson (bob@firegiant.com)",title:"Add conditional command-line arguments to bundle packages",draft:!1},s=void 0,d={unversionedId:"development/wips/add-conditional-command-line-arguments",id:"development/wips/add-conditional-command-line-arguments",title:"Add conditional command-line arguments to bundle packages",description:"User stories",source:"@site/docs/development/wips/4719-add-conditional-command-line-arguments.md",sourceDirName:"development/wips",slug:"/development/wips/add-conditional-command-line-arguments",permalink:"/wixtoolset/docs/development/wips/add-conditional-command-line-arguments",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/docs/development/wips/4719-add-conditional-command-line-arguments.md",tags:[],version:"current",sidebarPosition:4719,frontMatter:{wip:4719,type:"Feature",by:"Bob Arnson (bob@firegiant.com)",title:"Add conditional command-line arguments to bundle packages",draft:!1},sidebar:"docsSidebar",previous:{title:"Replace Win64 Attribute with Bitness Attribute",permalink:"/wixtoolset/docs/development/wips/replace-win64-with-intuitive-attribute"},next:{title:"Modify Burn API",permalink:"/wixtoolset/docs/development/wips/modify-burn-api"}},c={},m=[{value:"User stories",id:"user-stories",level:2},{value:"Proposal",id:"proposal",level:2},{value:"Considerations",id:"considerations",level:2},{value:"See Also",id:"see-also",level:2}],u={toc:m},p="wrapper";function b(e){var{components:t}=e,n=i(e,["components"]);return(0,a.kt)(p,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"user-stories"},"User stories"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"As a setup developer, I can author command-line arguments to an ExePackage in a bundle such that individual command-line arguments are included or excluded based on a condition. This allows me to, for example, omit command-line arguments that are empty or need to be omitted during uninstall.")),(0,a.kt)("h2",{id:"proposal"},"Proposal"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add a new CommandLine element as a child of ",(0,a.kt)("a",{parentName:"li",href:"http://wixtoolset.org/documentation/manual/v3/xsd/wix/exepackage.html"},"ExePackage")," with a Value string attribute."),(0,a.kt)("li",{parentName:"ol"},"CommandLine has a Condition attribute that must evaluate to true at package invocation time for that particular CommandLine to apply."),(0,a.kt)("li",{parentName:"ol"},"CommandLine has an OnInstall attribute of YesNoType that tells Burn to evaluate the CommandLine only when the parent package is being installed."),(0,a.kt)("li",{parentName:"ol"},"CommandLine has an OnUninstall attribute of YesNoType that tells Burn to evaluate the CommandLine only when the parent package is being uninstalled."),(0,a.kt)("li",{parentName:"ol"},"CommandLine has an OnRepair attribute of YesNoType that tells Burn to evaluate the CommandLine only when the parent package is being repaired."),(0,a.kt)("li",{parentName:"ol"},'At least one of @OnInstall, @OnUninstall, and @OnRepair attributes must be set to "yes".'),(0,a.kt)("li",{parentName:"ol"},"Multiple CommandLine elements are allowed; those with true conditions and matching @OnInstall, @OnUninstall, and @OnRepair attributes are concatenated with separating whitespace to create the command line passed to the package. CommandLine values are opaque strings, not limited to switches or name=value pairs."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("del",{parentName:"li"},"CommandLine children and the InstallCommand, UninstallCommand, and RepairCommand attributes cannot be used simultaneously.")),(0,a.kt)("li",{parentName:"ol"},"CommandLine and the InstallCommand, UninstallCommand, and RepairCommand attributes can be mixed. The CommandLine values append to the InstallCommand, UninstallCommand, and RepairCommand attribute values.")),(0,a.kt)("h2",{id:"considerations"},"Considerations"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("del",{parentName:"li"},"CommandLineArgument might be a better, if lengthier, name."),' We don\'t want to suggest any particular "style." See #7 under Proposal.'),(0,a.kt)("li",{parentName:"ol"},"Rather than have @OnInstall, @OnUninstall, and @OnRepair attributes, we could provide a WixBundleExecutePackageAction variable that developers could use in a Condition attribute as desired.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"WixBundleExecutePackageAction would work like WixBundleExecutePackageCacheFolder: The same variable is set to the package action state (BOOTSTRAPPER_ACTION_STATE) in *EngineExecutePackage before the new code that evaluates the CommandLine conditions.")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("a",{parentName:"li",href:"http://wixtoolset.org/documentation/manual/v3/xsd/wix/msiproperty.html"},"MsiProperty"),' element has similar semantics but each property is always passed to the MsiPackage regardless of action. We could add @OnInstall, @OnUninstall, and @OnRepair attributes would require defaulting them to "yes," which is always confusing. We could also:'),(0,a.kt)("li",{parentName:"ol"},'Adopting WixBundleExecutePackageAction and not implementing the @OnInstall, @OnUninstall, and @OnRepair attributes would eliminate the "yes" default requirement.'),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("del",{parentName:"li"},'Live with the confusion so as to not introduce a breaking change (i.e., specify @OnInstall/@OnUninstall/@OnRepair="no" to prevent the property from being added).')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("del",{parentName:"li"},'Rename the attributes ("NotOnInstall"?) and implement them such that if any of the new names are specified, all other attribute values are assumed to be "no".')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("del",{parentName:"li"},"Add the CommandLine element to all package types."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"* ~~Do we care someone could pass arguments that aren't NAME=VALUE? Should we check and block?~~\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"@rseanhall discovered the manifest MsiProperty/@RollbackValue attribute that isn't exposed in the WiX schema. Should we expose that via this change?")),(0,a.kt)("h2",{id:"see-also"},"See Also"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://wixtoolset.org/issues/4719/"},"Issue 4719")))}b.isMDXComponent=!0}}]);