"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[74360],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=i.createContext({}),u=function(e){var t=i.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return i.createElement(a.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=u(n),f=r,h=m["".concat(a,".").concat(f)]||m[f]||c[f]||s;return n?i.createElement(h,o(o({ref:t},d),{},{components:n})):i.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=f;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<s;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},99119:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>m});n(67294);var i=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const l={title:"InstallExecuteSequence Element",layout:"documentation_xsd_main"},a=void 0,u={unversionedId:"xsd/wix/installexecutesequence",id:"version-v3/xsd/wix/installexecutesequence",title:"InstallExecuteSequence Element",description:"Description",source:"@site/versioned_docs/version-v3/xsd/wix/installexecutesequence.md",sourceDirName:"xsd/wix",slug:"/xsd/wix/installexecutesequence",permalink:"/wixtoolset/docs/v3/xsd/wix/installexecutesequence",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/versioned_docs/version-v3/xsd/wix/installexecutesequence.md",tags:[],version:"v3",frontMatter:{title:"InstallExecuteSequence Element",layout:"documentation_xsd_main"}},d={},m=[],c={toc:m},f="wrapper";function h(e){var{components:t}=e,n=o(e,["components"]);return(0,i.kt)(f,s(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){r(e,t,n[t])}))}return e}({},c,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("dl",null,(0,i.kt)("dt",null,"Description"),(0,i.kt)("dd",null,"None"),(0,i.kt)("dt",null,"Windows Installer references"),(0,i.kt)("dd",null,(0,i.kt)("a",{href:"http://msdn.microsoft.com/library/aa369500.aspx",target:"_blank"},"InstallExecuteSequence Table")),(0,i.kt)("dt",null,"Parents"),(0,i.kt)("dd",null,(0,i.kt)("a",{href:"../fragment/"},"Fragment"),", ",(0,i.kt)("a",{href:"../module/"},"Module"),", ",(0,i.kt)("a",{href:"../product/"},"Product")),(0,i.kt)("dt",null,"Inner Text"),(0,i.kt)("dd",null,"None"),(0,i.kt)("dt",null,"Children"),(0,i.kt)("dd",null,"Choice of elements (min: 0, max: unbounded)",(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"../allocateregistryspace/"},"AllocateRegistrySpace")," (min: 0, max: unbounded): Ensures the needed amount of space exists in the registry."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../appsearch/"},"AppSearch")," (min: 0, max: unbounded): Uses file signatures to search for existing versions of products."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../bindimage/"},"BindImage")," (min: 0, max: unbounded): Binds each executable or DLL that must be bound to the DLLs imported by it."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../ccpsearch/"},"CCPSearch")," (min: 0, max: unbounded): Uses file signatures to validate that qualifying products are installed on a system before an upgrade installation is performed."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../costfinalize/"},"CostFinalize")," (min: 0, max: unbounded): Ends the internal installation costing process begun by the CostInitialize action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../costinitialize/"},"CostInitialize")," (min: 0, max: unbounded): Initiates the internal installation costing process."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../createfolders/"},"CreateFolders")," (min: 0, max: unbounded): Creates empty folders for components that are set to be installed."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../createshortcuts/"},"CreateShortcuts")," (min: 0, max: unbounded): Manages the creation of shortcuts."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../custom/"},"Custom")," (min: 0, max: unbounded): Use to sequence a custom action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../deleteservices/"},"DeleteServices")," (min: 0, max: unbounded): Stops a service and removes its registration from the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../disablerollback/"},"DisableRollback")," (min: 0, max: unbounded): Disables rollback for the remainder of the installation."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../duplicatefiles/"},"DuplicateFiles")," (min: 0, max: unbounded): Duplicates files installed by the InstallFiles action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../filecost/"},"FileCost")," (min: 0, max: unbounded): Initiates dynamic costing of standard installation actions."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../findrelatedproducts/"},"FindRelatedProducts")," (min: 0, max: unbounded): Runs through each record of the Upgrade table in sequence and compares the upgrade code, product version, and language in each row to products installed on the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../forcereboot/"},"ForceReboot")," (min: 0, max: unbounded): Prompts the user for a restart of the system during the installation. Not fixed sequence."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installexecute/"},"InstallExecute")," (min: 0, max: unbounded): Runs a script containing all operations spooled since either the start of the installation or the last InstallExecute action, or InstallExecuteAgain action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installexecuteagain/"},"InstallExecuteAgain")," (min: 0, max: unbounded): Runs a script containing all operations spooled since either the start of the installation or the last InstallExecute action, or InstallExecuteAgain action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installfiles/"},"InstallFiles")," (min: 0, max: unbounded): Copies files specified in the File table from the source directory to the destination directory."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installfinalize/"},"InstallFinalize")," (min: 0, max: unbounded): Marks the end of a sequence of actions that change the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installinitialize/"},"InstallInitialize")," (min: 0, max: unbounded): Marks the beginning of a sequence of actions that change the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installodbc/"},"InstallODBC")," (min: 0, max: unbounded): Installs the drivers, translators, and data sources in the ODBCDriver table, ODBCTranslator table, and ODBCDataSource table."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installservices/"},"InstallServices")," (min: 0, max: unbounded): Registers a service for the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../installvalidate/"},"InstallValidate")," (min: 0, max: unbounded): Verifies that all costed volumes have enough space for the installation."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../isolatecomponents/"},"IsolateComponents")," (min: 0, max: unbounded): Installs a copy of a component (commonly a shared DLL) into a private location for use by a specific application (typically an .exe)."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../launchconditions/"},"LaunchConditions")," (min: 0, max: unbounded): Queries the LaunchCondition table and evaluates each conditional statement recorded there."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../migratefeaturestates/"},"MigrateFeatureStates")," (min: 0, max: unbounded): Used for upgrading or installing over an existing application."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../movefiles/"},"MoveFiles")," (min: 0, max: unbounded): Locates existing files on the system and moves or copies those files to a new location."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../msipublishassemblies/"},"MsiPublishAssemblies")," (min: 0, max: unbounded): Manages the advertisement of CLR and Win32 assemblies."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../msiunpublishassemblies/"},"MsiUnpublishAssemblies")," (min: 0, max: unbounded): Manages the unadvertisement of CLR and Win32 assemblies that are being removed."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../patchfiles/"},"PatchFiles")," (min: 0, max: unbounded): Queries the Patch table to determine which patches are to be applied."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../processcomponents/"},"ProcessComponents")," (min: 0, max: unbounded): Registers and unregisters components, their key paths, and the component clients."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../publishcomponents/"},"PublishComponents")," (min: 0, max: unbounded): Manages the advertisement of the components from the PublishComponent table."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../publishfeatures/"},"PublishFeatures")," (min: 0, max: unbounded): Writes each feature's state into the system registry."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../publishproduct/"},"PublishProduct")," (min: 0, max: unbounded): Manages the advertisement of the product information with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registerclassinfo/"},"RegisterClassInfo")," (min: 0, max: unbounded): Manages the registration of COM class information with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registercomplus/"},"RegisterComPlus")," (min: 0, max: unbounded): Registers COM+ applications."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registerextensioninfo/"},"RegisterExtensionInfo")," (min: 0, max: unbounded): Manages the registration of extension related information with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registerfonts/"},"RegisterFonts")," (min: 0, max: unbounded): Registers installed fonts with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registermimeinfo/"},"RegisterMIMEInfo")," (min: 0, max: unbounded): Registers MIME-related registry information with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registerproduct/"},"RegisterProduct")," (min: 0, max: unbounded): Registers the product information with the installer."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registerprogidinfo/"},"RegisterProgIdInfo")," (min: 0, max: unbounded): Manages the registration of OLE ProgId information with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registertypelibraries/"},"RegisterTypeLibraries")," (min: 0, max: unbounded): Registers type libraries with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../registeruser/"},"RegisterUser")," (min: 0, max: unbounded): Registers the user information with the installer to identify the user of a product."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeduplicatefiles/"},"RemoveDuplicateFiles")," (min: 0, max: unbounded): Deletes files installed by the DuplicateFiles action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeenvironmentstrings/"},"RemoveEnvironmentStrings")," (min: 0, max: unbounded): Modifies the values of environment variables."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeexistingproducts/"},"RemoveExistingProducts")," (min: 0, max: unbounded): Goes through the product codes listed in the ActionProperty column of the Upgrade table and removes the products in sequence."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removefiles/"},"RemoveFiles")," (min: 0, max: unbounded): Removes files previously installed by the InstallFiles action."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removefolders/"},"RemoveFolders")," (min: 0, max: unbounded): Removes any folders linked to components set to be removed or run from source."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeinivalues/"},"RemoveIniValues")," (min: 0, max: unbounded): Removes .ini file information specified for removal in the RemoveIniFile table if the component is set to be installed locally or run from source."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeodbc/"},"RemoveODBC")," (min: 0, max: unbounded): Removes the data sources, translators, and drivers listed for removal during the installation."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeregistryvalues/"},"RemoveRegistryValues")," (min: 0, max: unbounded): Removes a registry value that has been authored into the registry table if the associated component was installed locally or as run from source, and is now set to be uninstalled."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../removeshortcuts/"},"RemoveShortcuts")," (min: 0, max: unbounded): Manages the removal of an advertised shortcut whose feature is selected for uninstallation or a nonadvertised shortcut whose component is selected for uninstallation."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../resolvesource/"},"ResolveSource")," (min: 0, max: unbounded): Determines the location of the source and sets the SourceDir property if the source has not been resolved yet. Not fixed sequence."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../rmccpsearch/"},"RMCCPSearch")," (min: 0, max: unbounded): Uses file signatures to validate that qualifying products are installed on a system before an upgrade installation is performed."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../schedulereboot/"},"ScheduleReboot")," (min: 0, max: unbounded): Prompts the user to restart the system at the end of installation. Not fixed sequence."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../selfregmodules/"},"SelfRegModules")," (min: 0, max: unbounded): Processes all modules listed in the SelfReg table and registers all installed modules with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../selfunregmodules/"},"SelfUnregModules")," (min: 0, max: unbounded): Unregisters all modules listed in the SelfReg table that are scheduled to be uninstalled."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../setodbcfolders/"},"SetODBCFolders")," (min: 0, max: unbounded): Checks for existing ODBC drivers and sets the target directory for each new driver to the location of an existing driver."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../startservices/"},"StartServices")," (min: 0, max: unbounded): Starts system services."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../stopservices/"},"StopServices")," (min: 0, max: unbounded): Stops system services."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unpublishcomponents/"},"UnpublishComponents")," (min: 0, max: unbounded): Manages the unadvertisement of components listed in the PublishComponent table."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unpublishfeatures/"},"UnpublishFeatures")," (min: 0, max: unbounded): Removes selection-state and feature-component mapping information from the registry."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregisterclassinfo/"},"UnregisterClassInfo")," (min: 0, max: unbounded): Manages the removal of COM class information from the system registry."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregistercomplus/"},"UnregisterComPlus")," (min: 0, max: unbounded): Removes COM+ applications from the registry."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregisterextensioninfo/"},"UnregisterExtensionInfo")," (min: 0, max: unbounded): Manages the removal of extension-related information from the system registry."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregisterfonts/"},"UnregisterFonts")," (min: 0, max: unbounded): Removes registration information about installed fonts from the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregistermimeinfo/"},"UnregisterMIMEInfo")," (min: 0, max: unbounded): Unregisters MIME-related registry information from the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregisterprogidinfo/"},"UnregisterProgIdInfo")," (min: 0, max: unbounded): Manages the unregistration of OLE ProgId information with the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../unregistertypelibraries/"},"UnregisterTypeLibraries")," (min: 0, max: unbounded): Unregisters type libraries from the system."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../validateproductid/"},"ValidateProductID")," (min: 0, max: unbounded): Sets the ProductID property to the full product identifier."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../writeenvironmentstrings/"},"WriteEnvironmentStrings")," (min: 0, max: unbounded): Modifies the values of environment variables."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../writeinivalues/"},"WriteIniValues")," (min: 0, max: unbounded): Writes the .ini file information that the application needs written to its .ini files."),(0,i.kt)("li",null,(0,i.kt)("a",{href:"../writeregistryvalues/"},"WriteRegistryValues")," (min: 0, max: unbounded): Sets up an application's registry information."))),(0,i.kt)("dt",null,"Attributes"),(0,i.kt)("dd",null,"None"),(0,i.kt)("dt",null,"See Also"),(0,i.kt)("dd",null,(0,i.kt)("a",{href:"../"},"Wix Schema"))))}h.isMDXComponent=!0}}]);