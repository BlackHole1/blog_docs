"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[14579],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>k});var r=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},u=Object.keys(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var i=r.createContext({}),s=function(t){var e=r.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(i.Provider,{value:e},t.children)},d="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,l=t.mdxType,u=t.originalType,i=t.parentName,c=a(t,["components","mdxType","originalType","parentName"]),d=s(n),f=l,k=d["".concat(i,".").concat(f)]||d[f]||p[f]||u;return n?r.createElement(k,o(o({ref:e},c),{},{components:n})):r.createElement(k,o({ref:e},c))}));function k(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var u=n.length,o=new Array(u);o[0]=f;var a={};for(var i in e)hasOwnProperty.call(e,i)&&(a[i]=e[i]);a.originalType=t,a[d]="string"==typeof t?t:l,o[1]=a;for(var s=2;s<u;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},82782:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>a,metadata:()=>s,toc:()=>d});n(67294);var r=n(3905);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function u(t,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):function(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))})),t}function o(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},u=Object.keys(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(r=0;r<u.length;r++)n=u[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}const a={title:"UnitTest Element (Lux Extension)",layout:"documentation_xsd_extension"},i=void 0,s={unversionedId:"xsd/lux/unittest",id:"version-v3/xsd/lux/unittest",title:"UnitTest Element (Lux Extension)",description:"Description",source:"@site/versioned_docs/version-v3/xsd/lux/unittest.md",sourceDirName:"xsd/lux",slug:"/xsd/lux/unittest",permalink:"/wixtoolset/docs/v3/xsd/lux/unittest",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/versioned_docs/version-v3/xsd/lux/unittest.md",tags:[],version:"v3",frontMatter:{title:"UnitTest Element (Lux Extension)",layout:"documentation_xsd_extension"}},c={},d=[],p={toc:d},f="wrapper";function k(t){var{components:e}=t,n=o(t,["components"]);return(0,r.kt)(f,u(function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})))),r.forEach((function(e){l(t,e,n[e])}))}return t}({},p,n),{components:e,mdxType:"MDXLayout"}),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Description"),(0,r.kt)("dd",null,"                 Describes a unit test to be executed against a particular custom action, resulting in a                 particular property value. Single-value properties, multi-value properties, and                 name/value-pair properties can all be tested declaratively.             "),(0,r.kt)("dt",null,"Windows Installer references"),(0,r.kt)("dd",null,"None"),(0,r.kt)("dt",null,"Parents"),(0,r.kt)("dd",null,(0,r.kt)("a",{href:"../../wix/fragment/"},"Fragment"),", ",(0,r.kt)("a",{href:"../../lux/mutation",class:"extension"},"Mutation"),", ",(0,r.kt)("a",{href:"../../lux/unittest",class:"extension"},"UnitTest")),(0,r.kt)("dt",null,"Inner Text"),(0,r.kt)("dd",null,"None"),(0,r.kt)("dt",null,"Children"),(0,r.kt)("dd",null,"Choice of elements (min: 0, max: unbounded)",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"../../lux/condition",class:"extension"},"Condition")," (min: 0, max: unbounded)"),(0,r.kt)("li",null,(0,r.kt)("a",{href:"../../lux/expression",class:"extension"},"Expression")," (min: 0, max: unbounded)"),(0,r.kt)("li",null,(0,r.kt)("a",{href:"../../lux/unittest",class:"extension"},"UnitTest")," (min: 0, max: unbounded)"))),(0,r.kt)("dt",null,"Attributes"),(0,r.kt)("dd",null,(0,r.kt)("table",{cellspacing:"0",cellpadding:"0",class:"schema"},(0,r.kt)("tr",null,(0,r.kt)("th",{width:"15%"},"Name"),(0,r.kt)("th",{width:"15%"},"Type"),(0,r.kt)("th",{width:"65%"},"Description"),(0,r.kt)("th",{width:"15%"},"Required")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"CustomAction"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         Identifier of the custom action to be tested.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Id"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         Identifier of the unit test. If you omit this attribute, a stable identifier is generated for you.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Index"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         A formatted string that evaluates to either an integer index into a multi-value property or a string name of a name/value-pair multi-value property.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"NameValueSeparator"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         One character that is used to separate values in a name/value-pair multi-value property.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Operator"),(0,r.kt)("td",null,"Enumeration"),(0,r.kt)("td",null,'                         The operator to apply to the property and value. Default is "equal."                       This attribute\'s value must be one of the following:',(0,r.kt)("dl",null,(0,r.kt)("dt",{class:"enumerationValue"},(0,r.kt)("dfn",null,"equal")),(0,r.kt)("dd",null,"                                     (Default) Compares Property to Value and succeeds if they are equal.                                 "),(0,r.kt)("dt",{class:"enumerationValue"},(0,r.kt)("dfn",null,"notEqual")),(0,r.kt)("dd",null,"                                     Compares Property to Value and succeeds if they are NOT equal.                                 "),(0,r.kt)("dt",{class:"enumerationValue"},(0,r.kt)("dfn",null,"caseInsensitiveEqual")),(0,r.kt)("dd",null,"                                     Compares Property to Value and succeeds if they are equal (ignoring case).                                 "),(0,r.kt)("dt",{class:"enumerationValue"},(0,r.kt)("dfn",null,"caseInsensitiveNotEqual")),(0,r.kt)("dd",null,"                                     Compares Property to Value and succeeds if they are NOT equal (ignoring case).                                 "))),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Property"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         Name of the property set by the custom action.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Value"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         The value to compare to the property.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"ValueSeparator"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         One character that is used to separate values in a multi-value property.                     "),(0,r.kt)("td",null,"\xa0")))),(0,r.kt)("dt",null,"See Also"),(0,r.kt)("dd",null,(0,r.kt)("a",{href:"../"},"Lux Schema"))))}k.isMDXComponent=!0}}]);