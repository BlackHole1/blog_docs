"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[7813],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=s(n),h=i,f=c["".concat(u,".").concat(h)]||c[h]||p[h]||l;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=h;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[c]="string"==typeof e?e:i,o[1]=a;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},28149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>c});n(67294);var r=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const a={title:"Media Element",layout:"documentation_xsd_main"},u=void 0,s={unversionedId:"xsd/wix/media",id:"version-v3/xsd/wix/media",title:"Media Element",description:"Description",source:"@site/versioned_docs/version-v3/xsd/wix/media.md",sourceDirName:"xsd/wix",slug:"/xsd/wix/media",permalink:"/wixtoolset/docs/v3/xsd/wix/media",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/versioned_docs/version-v3/xsd/wix/media.md",tags:[],version:"v3",frontMatter:{title:"Media Element",layout:"documentation_xsd_main"}},d={},c=[],p={toc:c},h="wrapper";function f(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)(h,l(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){i(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("dl",null,(0,r.kt)("dt",null,"Description"),(0,r.kt)("dd",null,"Media element describes a disk that makes up the source media for the installation."),(0,r.kt)("dt",null,"Windows Installer references"),(0,r.kt)("dd",null,(0,r.kt)("a",{href:"http://msdn.microsoft.com/library/aa369801.aspx",target:"_blank"},"Media Table")),(0,r.kt)("dt",null,"Parents"),(0,r.kt)("dd",null,(0,r.kt)("a",{href:"../fragment/"},"Fragment"),", ",(0,r.kt)("a",{href:"../patch/"},"Patch"),", ",(0,r.kt)("a",{href:"../product/"},"Product")),(0,r.kt)("dt",null,"Inner Text"),(0,r.kt)("dd",null,"None"),(0,r.kt)("dt",null,"Children"),(0,r.kt)("dd",null,"Sequence (min: 1, max: 1)",(0,r.kt)("ol",null,(0,r.kt)("li",null,"Choice of elements (min: 0, max: unbounded)",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"../digitalsignature/"},"DigitalSignature")," (min: 0, max: unbounded)"),(0,r.kt)("li",null,(0,r.kt)("a",{href:"../patchbaseline/"},"PatchBaseline")," (min: 0, max: unbounded)"),(0,r.kt)("li",null,(0,r.kt)("a",{href:"../symbolpath/"},"SymbolPath")," (min: 0, max: unbounded)"))))),(0,r.kt)("dt",null,"Attributes"),(0,r.kt)("dd",null,(0,r.kt)("table",{cellspacing:"0",cellpadding:"0",class:"schema"},(0,r.kt)("tr",null,(0,r.kt)("th",{width:"15%"},"Name"),(0,r.kt)("th",{width:"15%"},"Type"),(0,r.kt)("th",{width:"65%"},"Description"),(0,r.kt)("th",{width:"15%"},"Required")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Id"),(0,r.kt)("td",null,(0,r.kt)("a",{href:"../simple_type_diskidtype/"},"DiskIdType")),(0,r.kt)("td",null,"Disk identifier for Media table. This number must be equal to or greater than 1."),(0,r.kt)("td",null,"Yes")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Cabinet"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"The name of the cabinet if some or all of the files stored on the media are in a cabinet file.  If no cabinets are used, this attribute must not be set."),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"CompressionLevel"),(0,r.kt)("td",null,(0,r.kt)("a",{href:"../simple_type_compressionleveltype/"},"CompressionLevelType")),(0,r.kt)("td",null,"                         Indicates the compression level for the Media's cabinet.  This attribute can                         only be used in conjunction with the Cabinet attribute.  The default is 'mszip'.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"DiskPrompt"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,'The disk name, which is usually the visible text printed on the disk. This localizable text is used to prompt the user when this disk needs to be inserted. This value will be used in the "[1]" of the DiskPrompt Property. Using this attribute will require you to define a DiskPrompt Property.'),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"EmbedCab"),(0,r.kt)("td",null,(0,r.kt)("a",{href:"../simple_type_yesnotype/"},"YesNoType")),(0,r.kt)("td",null,"Instructs the binder to embed the cabinet in the product if 'yes'.  This attribute can only be specified in conjunction with the Cabinet attribute."),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Layout"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         This attribute specifies the root directory for the uncompressed files that                         are a part of this Media element.  By default, the src will be the output                         directory for the final image.  The default value ensures the binder generates                         an installable image.  If a relative path is specified in the src attribute,                         the value will be appended to the image's output directory.  If an absolute                         path is provided, that path will be used without modification.  The latter two                         options are provided to ease the layout of an image onto multiple medias (CDs/DVDs).                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Source"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         Optional property that identifies the source of the embedded cabinet.                         If a cabinet is specified for a patch, this property should be defined                         and unique to each patch so that the embedded cabinet containing patched                         and new files can be located in the patch package. If the cabinet is not                         embedded - this is not typical - the cabinet can be found in the directory                         referenced in this column. If empty, the external cabinet must be located                         in the SourceDir directory.                     "),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"src"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"This attribute has been deprecated; please use the Layout attribute instead."),(0,r.kt)("td",null,"\xa0")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"VolumeLabel"),(0,r.kt)("td",null,"String"),(0,r.kt)("td",null,"                         The label attributed to the volume. This is the volume label returned                         by the GetVolumeInformation function. If the SourceDir property refers                         to a removable (floppy or CD-ROM) volume, then this volume label is                         used to verify that the proper disk is in the drive before attempting                         to install files. The entry in this column must match the volume label                         of the physical media.                     "),(0,r.kt)("td",null,"\xa0")))),(0,r.kt)("dt",null,"See Also"),(0,r.kt)("dd",null,(0,r.kt)("a",{href:"../"},"Wix Schema"))))}f.isMDXComponent=!0}}]);