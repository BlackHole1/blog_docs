"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[93192],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var l=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=l.createContext({}),a=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=a(e.components);return l.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=a(n),d=i,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||r;return n?l.createElement(m,o(o({ref:t},c),{},{components:n})):l.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[p]="string"==typeof e?e:i,o[1]=u;for(var a=2;a<r;a++)o[a]=n[a];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47689:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>u,metadata:()=>a,toc:()=>p});n(67294);var l=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const u={title:"Specifying Cultures to Build",layout:"documentation",after:"build_a_localized_version"},s="Specifying Cultures to Build",a={unversionedId:"howtos/ui_and_localization/specifying_cultures_to_build",id:"version-v3/howtos/ui_and_localization/specifying_cultures_to_build",title:"Specifying Cultures to Build",description:"Specifying Cultures to build on the Command Line",source:"@site/versioned_docs/version-v3/howtos/ui_and_localization/specifying_cultures_to_build.md",sourceDirName:"howtos/ui_and_localization",slug:"/howtos/ui_and_localization/specifying_cultures_to_build",permalink:"/wixtoolset/docs/v3/howtos/ui_and_localization/specifying_cultures_to_build",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/versioned_docs/version-v3/howtos/ui_and_localization/specifying_cultures_to_build.md",tags:[],version:"v3",frontMatter:{title:"Specifying Cultures to Build",layout:"documentation",after:"build_a_localized_version"}},c={},p=[{value:"Specifying Cultures to build on the Command Line",id:"specifying-cultures-to-build-on-the-command-line",level:2},{value:"Specifying Cultures to build in Visual Studio",id:"specifying-cultures-to-build-in-visual-studio",level:2}],f={toc:p},d="wrapper";function m(e){var{components:t}=e,u=o(e,["components"]);return(0,l.kt)(d,r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},l=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(l=l.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),l.forEach((function(t){i(e,t,n[t])}))}return e}({},f,u),{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"specifying-cultures-to-build"},"Specifying Cultures to Build"),(0,l.kt)("h2",{id:"specifying-cultures-to-build-on-the-command-line"},"Specifying Cultures to build on the Command Line"),(0,l.kt)("p",null,"You can specify a specific culture for light.exe to build using the culture switch:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"light.exe myinstaller.wixobj -cultures:en-us -ext WixUIExtension \n-out myinstaller-en-us.msi\n")),(0,l.kt)("p",null,"This will cause light to build an en-us installer using the en-us resources from\nWixUIExtension."),(0,l.kt)("p",null,"You can still use cultures when specifying localization files:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"light.exe myinstaller.wixobj -cultures:en-us -loc mystrings_en-US.wxl \n-loc mystrings_fr-FR.wxl -out myinstaller-en-us.msi\n")),(0,l.kt)("p",null,"This will cause light to build an en-us installer using the en-us resources from\nthe specified en-US .wxl file. Note that when specifying -cultures any wxl files\nspecified with the -loc switch that do not map will be ignored (mystrings","_","fr-FR.wxl\nin this case.)"),(0,l.kt)("p",null,"The neutral (invariant) culture can be specified by using ",(0,l.kt)("em",{parentName:"p"},"neutral"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"light.exe myinstaller.wixobj -cultures:neutral -loc mystrings_en-US.wxl \n-loc mystrings_fr-FR.wxl -loc mystrings.wxl -out myinstaller.msi\n")),(0,l.kt)("p",null,"This will cause light to build a neutral installer using the neutral resources from\nthe mystrings.wxl file. "),(0,l.kt)("p",null,"You can use cultures and localization files together to specify fallback cultures:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"light.exe myinstaller.wixobj -cultures:en-us;en -loc mystrings_en-US.wxl \n-loc mystrings_en.wxl -ext WixUIExtension -out myinstaller-en-us.msi\n")),(0,l.kt)("p",null,"This will cause light to build an en-us installer first using localization variables\nfrom the en-US localization file (mystrings","_","en-US.wxl), then the en localization\nfile (mystrings","_","en.wxl), then finally WixUIExtension."),(0,l.kt)("h2",{id:"specifying-cultures-to-build-in-visual-studio"},"Specifying Cultures to build in Visual Studio"),(0,l.kt)("p",null,"During the development of your installer you may want to temporarily disable building\nsome of the languages to speed up build time. You can do this by going to\n",(0,l.kt)("strong",{parentName:"p"},"Project")," > ",(0,l.kt)("em",null,(0,l.kt)("strong",null,"Projectname"))," ",(0,l.kt)("strong",{parentName:"p"},"Properties")," on the menu\nand selecting the ",(0,l.kt)("strong",null,"Build")," tab. In the ",(0,l.kt)("strong",{parentName:"p"},"Cultures to build"),"\nfield enter the semicolon list of cultures or culture groups you would like built."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cultures to build")," may be used to specify cultures to build when\na .wxl file is not provided for a target culture. For example, to build an en-US\ninstaller and an ru-RU installer when only an ru-RU .wxl file is provided, specify\nen-US;ru-RU. Wix localization variables for the ru-RU installer will first come\nfrom the provided .wxl file, then referenced WiX extensions (IE: WixUIExtension).\nWix localization variables for the en-US installer will only come from referenced\nextensions."),(0,l.kt)("p",null,"The neutral (invariant) culture can be specified by using ",(0,l.kt)("em",{parentName:"p"},"neutral"),".\nTo build English (United States), French (France), and neutral installers specify\nthe following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"en-US;fr-FR;neutral\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cultures to build")," may also be used to specify how to use multiple\nWxL files to build a single installer. Each culture or culture group will build\nan individual MSI. A ",(0,l.kt)("strong",{parentName:"p"},"culture group")," consists of a list of cultures\nseparated by ",(0,l.kt)("em",{parentName:"p"},"commas")," and is useful for specifying fallback cultures used to locate\nWiX localization variables.  Multiple culture groups may be separated by ",(0,l.kt)("em",{parentName:"p"},"semi-colons"),"\nto build multiple outputs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"primary1,fallback1;primary2,fallback2\n")),(0,l.kt)("p",null,"The example below demonstrates the settings needed to build two installers from\nthree .wxl files. Both en-US and en-GB installers will be built, using three localization\nfiles: setupStrings","_","en-US.wxl, setupStrings","_","en-GB.wxl, and setupStrings","_","en.wxl.\nThe sample uses two culture groups to share the neutral English translations between\nboth of the fully localized installers."),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(85084).Z,width:"1060",height:"784"})))}m.isMDXComponent=!0},85084:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/build_a_localized_version_votive_culture_fallback-ad522d3de2f11ddaccc89a9b5ad12a54.jpg"}}]);