"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[95673],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(a),u=n,h=c["".concat(s,".").concat(u)]||c[u]||m[u]||l;return a?r.createElement(h,i(i({ref:t},p),{},{components:a})):r.createElement(h,i({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},39591:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});a(67294);var r=a(3905);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const o={custom_edit_url:null,toc_max_heading_level:2},s="ArchiveInfo Class",d={unversionedId:"api/wixtoolset.dtf.compression/archiveinfo",id:"api/wixtoolset.dtf.compression/archiveinfo",title:"ArchiveInfo Class",description:"Abstract object representing a compressed archive on disk; provides access to file-based operations on the archive.",source:"@site/docs/api/wixtoolset.dtf.compression/archiveinfo.md",sourceDirName:"api/wixtoolset.dtf.compression",slug:"/api/wixtoolset.dtf.compression/archiveinfo",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.compression/archiveinfo",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null,toc_max_heading_level:2},sidebar:"docsSidebar",previous:{title:"ArchiveFileStreamContext Class",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.compression/archivefilestreamcontext"},next:{title:"ArchiveProgressEventArgs Class",permalink:"/wixtoolset/docs/api/wixtoolset.dtf.compression/archiveprogresseventargs"}},p={},c=[{value:"Methods",id:"methods",level:2},{value:"Properties",id:"properties",level:2},{value:"CopyTo(destFileName) Method",id:"copyto_destfilename",level:2},{value:"Declaration",id:"declaration",level:3},{value:"Parameters",id:"parameters",level:3},{value:"CopyTo(destFileName, overwrite) Method",id:"copyto_destfilename_overwrite",level:2},{value:"Declaration",id:"declaration-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"CreateCompressionEngine() Method",id:"createcompressionengine_nop",level:2},{value:"Declaration",id:"declaration-2",level:3},{value:"Return value",id:"return-value",level:3},{value:"Remarks",id:"remarks",level:3},{value:"Delete() Method",id:"delete_nop",level:2},{value:"Declaration",id:"declaration-3",level:3},{value:"GetFiles() Method",id:"getfiles_nop",level:2},{value:"Declaration",id:"declaration-4",level:3},{value:"Return value",id:"return-value-1",level:3},{value:"GetFiles(searchPattern) Method",id:"getfiles_searchpattern",level:2},{value:"Declaration",id:"declaration-5",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return value",id:"return-value-2",level:3},{value:"IsValid() Method",id:"isvalid_nop",level:2},{value:"Declaration",id:"declaration-6",level:3},{value:"Return value",id:"return-value-3",level:3},{value:"MoveTo(destFileName) Method",id:"moveto_destfilename",level:2},{value:"Declaration",id:"declaration-7",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"OpenRead(fileName) Method",id:"openread_filename",level:2},{value:"Declaration",id:"declaration-8",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return value",id:"return-value-4",level:3},{value:"OpenText(fileName) Method",id:"opentext_filename",level:2},{value:"Declaration",id:"declaration-9",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Return value",id:"return-value-5",level:3},{value:"Remarks",id:"remarks-1",level:3},{value:"Pack(sourceDirectory) Method",id:"pack_sourcedirectory",level:2},{value:"Declaration",id:"declaration-10",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Remarks",id:"remarks-2",level:3},{value:"ToString() Method",id:"tostring_nop",level:2},{value:"Declaration",id:"declaration-11",level:3},{value:"Return value",id:"return-value-6",level:3},{value:"Unpack(destDirectory) Method",id:"unpack_destdirectory",level:2},{value:"Declaration",id:"declaration-12",level:3},{value:"Parameters",id:"parameters-7",level:3},{value:"UnpackFile(fileName, destFileName) Method",id:"unpackfile_filename_destfilename",level:2},{value:"Declaration",id:"declaration-13",level:3},{value:"Parameters",id:"parameters-8",level:3},{value:"Remarks",id:"remarks-3",level:3},{value:"Directory Property",id:"directory",level:2},{value:"Declaration",id:"declaration-14",level:3},{value:"DirectoryName Property",id:"directoryname",level:2},{value:"Declaration",id:"declaration-15",level:3},{value:"Exists Property",id:"exists",level:2},{value:"Declaration",id:"declaration-16",level:3},{value:"Length Property",id:"length",level:2},{value:"Declaration",id:"declaration-17",level:3},{value:"Name Property",id:"name",level:2},{value:"Declaration",id:"declaration-18",level:3}],m={toc:c},u="wrapper";function h(e){var{components:t}=e,a=i(e,["components"]);return(0,r.kt)(u,l(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},r=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),r.forEach((function(t){n(e,t,a[t])}))}return e}({},m,a),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"archiveinfo-class"},"ArchiveInfo Class"),(0,r.kt)("p",null,"Abstract object representing a compressed archive on disk; provides access to file-based operations on the archive."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#copyto_destfilename"},"CopyTo(destFileName)")),(0,r.kt)("td",{parentName:"tr",align:null},"Copies an existing archive to another location.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#copyto_destfilename_overwrite"},"CopyTo(destFileName, overwrite)")),(0,r.kt)("td",{parentName:"tr",align:null},"Copies an existing archive to another location, optionally overwriting the destination file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#createcompressionengine_nop"},"CreateCompressionEngine()")),(0,r.kt)("td",{parentName:"tr",align:null},"Creates a compression engine that does the low-level work for this object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#delete_nop"},"Delete()")),(0,r.kt)("td",{parentName:"tr",align:null},"Deletes the archive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#getfiles_nop"},"GetFiles()")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets information about the files contained in the archive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#getfiles_searchpattern"},"GetFiles(searchPattern)")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets information about the certain files contained in the archive file.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#isvalid_nop"},"IsValid()")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if the archive contains a valid archive header.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#moveto_destfilename"},"MoveTo(destFileName)")),(0,r.kt)("td",{parentName:"tr",align:null},"Moves an existing archive to another location.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#openread_filename"},"OpenRead(fileName)")),(0,r.kt)("td",{parentName:"tr",align:null},"Opens a file inside the archive for reading without actually extracting the file to disk.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#opentext_filename"},"OpenText(fileName)")),(0,r.kt)("td",{parentName:"tr",align:null},"Opens a file inside the archive for reading text with UTF-8 encoding without actually extracting the file to disk.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pack_sourcedirectory"},"Pack(sourceDirectory)")),(0,r.kt)("td",{parentName:"tr",align:null},"Compresses all files in a directory into the archive. Does not include subdirectories.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tostring_nop"},"ToString()")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the full path of the archive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#unpack_destdirectory"},"Unpack(destDirectory)")),(0,r.kt)("td",{parentName:"tr",align:null},"Extracts all files from an archive to a destination directory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#unpackfile_filename_destfilename"},"UnpackFile(fileName, destFileName)")),(0,r.kt)("td",{parentName:"tr",align:null},"Extracts a single file from the archive.")))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#directory"},"Directory")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the directory that contains the archive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#directoryname"},"DirectoryName")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the full path of the directory that contains the archive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#exists"},"Exists")),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if the archive exists.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#length"},"Length")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the size of the archive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#name"},"Name")),(0,r.kt)("td",{parentName:"tr",align:null},"Gets the file name of the archive.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"WixToolset.Dtf.Compression.dll")," version ",(0,r.kt)("inlineCode",{parentName:"p"},"5.0.0+41e11442b2ca93e444b60213b5ae99dcbab787d8")),(0,r.kt)("h2",{id:"copyto_destfilename"},"CopyTo(destFileName) Method"),(0,r.kt)("p",null,"Copies an existing archive to another location."),(0,r.kt)("h3",{id:"declaration"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void CopyTo(\n  string destFileName\n)\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destFileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The destination file path.")))),(0,r.kt)("h2",{id:"copyto_destfilename_overwrite"},"CopyTo(destFileName, overwrite) Method"),(0,r.kt)("p",null,"Copies an existing archive to another location, optionally overwriting the destination file."),(0,r.kt)("h3",{id:"declaration-1"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void CopyTo(\n  string destFileName,\n  bool overwrite\n)\n")),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destFileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The destination file path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"overwrite"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, the destination file will be overwritten if it exists.")))),(0,r.kt)("h2",{id:"createcompressionengine_nop"},"CreateCompressionEngine() Method"),(0,r.kt)("p",null,"Creates a compression engine that does the low-level work for this object."),(0,r.kt)("h3",{id:"declaration-2"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"protected CompressionEngine CreateCompressionEngine()\n")),(0,r.kt)("h3",{id:"return-value"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CompressionEngine")," A new compression engine instance that matches the specific subclass of archive."),(0,r.kt)("h3",{id:"remarks"},"Remarks"),(0,r.kt)("p",null,"Each instance will be \xabsee M:WixToolset.Dtf.Compression.CompressionEngine.Dispose\xbb d immediately after use."),(0,r.kt)("h2",{id:"delete_nop"},"Delete() Method"),(0,r.kt)("p",null,"Deletes the archive."),(0,r.kt)("h3",{id:"declaration-3"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void Delete()\n")),(0,r.kt)("h2",{id:"getfiles_nop"},"GetFiles() Method"),(0,r.kt)("p",null,"Gets information about the files contained in the archive."),(0,r.kt)("h3",{id:"declaration-4"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IList<WixToolset.Dtf.Compression.ArchiveFileInfo> GetFiles()\n")),(0,r.kt)("h3",{id:"return-value-1"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"IList<WixToolset.Dtf.Compression.ArchiveFileInfo>")," A list of \xabsee T:WixToolset.Dtf.Compression.ArchiveFileInfo\xbb objects, each containing information about a file in the archive."),(0,r.kt)("h2",{id:"getfiles_searchpattern"},"GetFiles(searchPattern) Method"),(0,r.kt)("p",null,"Gets information about the certain files contained in the archive file."),(0,r.kt)("h3",{id:"declaration-5"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public IList<WixToolset.Dtf.Compression.ArchiveFileInfo> GetFiles(\n  string searchPattern\n)\n")),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"searchPattern"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'The search string, such as "*.txt".')))),(0,r.kt)("h3",{id:"return-value-2"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"IList<WixToolset.Dtf.Compression.ArchiveFileInfo>")," A list of \xabsee T:WixToolset.Dtf.Compression.ArchiveFileInfo\xbb objects, each containing information about a file in the archive."),(0,r.kt)("h2",{id:"isvalid_nop"},"IsValid() Method"),(0,r.kt)("p",null,"Checks if the archive contains a valid archive header."),(0,r.kt)("h3",{id:"declaration-6"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool IsValid()\n")),(0,r.kt)("h3",{id:"return-value-3"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"bool")," True if the file is a valid archive; false otherwise."),(0,r.kt)("h2",{id:"moveto_destfilename"},"MoveTo(destFileName) Method"),(0,r.kt)("p",null,"Moves an existing archive to another location."),(0,r.kt)("h3",{id:"declaration-7"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void MoveTo(\n  string destFileName\n)\n")),(0,r.kt)("h3",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destFileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The destination file path.")))),(0,r.kt)("h2",{id:"openread_filename"},"OpenRead(fileName) Method"),(0,r.kt)("p",null,"Opens a file inside the archive for reading without actually extracting the file to disk."),(0,r.kt)("h3",{id:"declaration-8"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.IO.Stream OpenRead(\n  string fileName\n)\n")),(0,r.kt)("h3",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the file in the archive. Also includes the internal path of the file, if any. File name matching is case-insensitive.")))),(0,r.kt)("h3",{id:"return-value-4"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.IO.Stream")," A stream for reading directly from the packed file. Like any stream this should be closed/disposed as soon as it is no longer needed."),(0,r.kt)("h2",{id:"opentext_filename"},"OpenText(fileName) Method"),(0,r.kt)("p",null,"Opens a file inside the archive for reading text with UTF-8 encoding without actually extracting the file to disk."),(0,r.kt)("h3",{id:"declaration-9"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.IO.StreamReader OpenText(\n  string fileName\n)\n")),(0,r.kt)("h3",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the file in the archive. Also includes the internal path of the file, if any. File name matching is case-insensitive.")))),(0,r.kt)("h3",{id:"return-value-5"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"System.IO.StreamReader")," A reader for reading text directly from the packed file. Like any reader this should be closed/disposed as soon as it is no longer needed."),(0,r.kt)("h3",{id:"remarks-1"},"Remarks"),(0,r.kt)("p",null,"To open an archived text file with different encoding, use the \xabsee M:WixToolset.Dtf.Compression.ArchiveInfo.OpenRead(System.String)\xbb method and pass the returned stream to one of the \xabsee T:System.IO.StreamReader\xbb constructor overloads."),(0,r.kt)("h2",{id:"pack_sourcedirectory"},"Pack(sourceDirectory) Method"),(0,r.kt)("p",null,"Compresses all files in a directory into the archive. Does not include subdirectories."),(0,r.kt)("h3",{id:"declaration-10"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void Pack(\n  string sourceDirectory\n)\n")),(0,r.kt)("h3",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sourceDirectory"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The directory containing the files to be included.")))),(0,r.kt)("h3",{id:"remarks-2"},"Remarks"),(0,r.kt)("p",null,"Uses maximum compression level."),(0,r.kt)("h2",{id:"tostring_nop"},"ToString() Method"),(0,r.kt)("p",null,"Gets the full path of the archive."),(0,r.kt)("h3",{id:"declaration-11"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public string ToString()\n")),(0,r.kt)("h3",{id:"return-value-6"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")," The full path of the archive."),(0,r.kt)("h2",{id:"unpack_destdirectory"},"Unpack(destDirectory) Method"),(0,r.kt)("p",null,"Extracts all files from an archive to a destination directory."),(0,r.kt)("h3",{id:"declaration-12"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void Unpack(\n  string destDirectory\n)\n")),(0,r.kt)("h3",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destDirectory"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Directory where the files are to be extracted.")))),(0,r.kt)("h2",{id:"unpackfile_filename_destfilename"},"UnpackFile(fileName, destFileName) Method"),(0,r.kt)("p",null,"Extracts a single file from the archive."),(0,r.kt)("h3",{id:"declaration-13"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public void UnpackFile(\n  string fileName,\n  string destFileName\n)\n")),(0,r.kt)("h3",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the file in the archive. Also includes the internal path of the file, if any. File name matching is case-insensitive.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destFileName"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The path where the file is to be extracted on disk.")))),(0,r.kt)("h3",{id:"remarks-3"},"Remarks"),(0,r.kt)("p",null,"If ",(0,r.kt)("em",{parentName:"p"},"destFileName")," already exists, it will be overwritten."),(0,r.kt)("h2",{id:"directory"},"Directory Property"),(0,r.kt)("p",null,"Gets the directory that contains the archive."),(0,r.kt)("h3",{id:"declaration-14"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.IO.DirectoryInfo Directory { get; set; } \n")),(0,r.kt)("h2",{id:"directoryname"},"DirectoryName Property"),(0,r.kt)("p",null,"Gets the full path of the directory that contains the archive."),(0,r.kt)("h3",{id:"declaration-15"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public string DirectoryName { get; set; } \n")),(0,r.kt)("h2",{id:"exists"},"Exists Property"),(0,r.kt)("p",null,"Checks if the archive exists."),(0,r.kt)("h3",{id:"declaration-16"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public bool Exists { get; set; } \n")),(0,r.kt)("h2",{id:"length"},"Length Property"),(0,r.kt)("p",null,"Gets the size of the archive."),(0,r.kt)("h3",{id:"declaration-17"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public System.Int64 Length { get; set; } \n")),(0,r.kt)("h2",{id:"name"},"Name Property"),(0,r.kt)("p",null,"Gets the file name of the archive."),(0,r.kt)("h3",{id:"declaration-18"},"Declaration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public string Name { get; set; } \n")))}h.isMDXComponent=!0}}]);