"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[85886],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,p=d["".concat(l,".").concat(m)]||d[m]||h[m]||o;return n?a.createElement(p,r(r({ref:t},u),{},{components:n})):a.createElement(p,r({ref:t},u))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});n(67294);var a=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const s={sidebar_position:20},l="Utility custom actions",c={unversionedId:"tools/wixext/util",id:"tools/wixext/util",title:"Utility custom actions",description:"WiX includes a number of utility custom actions in the WixToolset.Util.wixext WiX extension. To use them, add a package reference to WixToolset.Util.wixext in your .wixproj or use wix extension and wix build -ext at the command line.",source:"@site/docs/tools/wixext/util.md",sourceDirName:"tools/wixext",slug:"/tools/wixext/util",permalink:"/wixtoolset/docs/tools/wixext/util",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/docs/tools/wixext/util.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"docsSidebar",previous:{title:"WixUI dialog library",permalink:"/wixtoolset/docs/tools/wixext/wixui"},next:{title:"Quiet execution custom actions",permalink:"/wixtoolset/docs/tools/wixext/quietexec"}},u={},d=[{value:"WixShellExec custom actions",id:"wixshellexec-custom-actions",level:2},{value:"Launch an embedded file",id:"launch-an-embedded-file",level:3},{value:"Launch a file without elevation",id:"launch-a-file-without-elevation",level:3},{value:"BroadcastEnvironmentChange and BroadcastSettingChange custom actions",id:"broadcastenvironmentchange-and-broadcastsettingchange-custom-actions",level:2},{value:"CheckRebootRequired custom actions",id:"checkrebootrequired-custom-actions",level:2},{value:"ExitEarlyWithSuccess custom actions",id:"exitearlywithsuccess-custom-actions",level:2},{value:"FailWhenDeferred custom actions",id:"failwhendeferred-custom-actions",level:2},{value:"WaitForEvent and WaitForEventDeferred custom actions",id:"waitforevent-and-waitforeventdeferred-custom-actions",level:2}],h={toc:d},m="wrapper";function p(e){var{components:t}=e,n=r(e,["components"]);return(0,a.kt)(m,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){i(e,t,n[t])}))}return e}({},h,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"utility-custom-actions"},"Utility custom actions"),(0,a.kt)("p",null,"WiX includes a number of utility custom actions in the WixToolset.Util.wixext WiX extension. To use them, add a package reference to WixToolset.Util.wixext in your .wixproj or use ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/tools/wixexe#extension"},(0,a.kt)("inlineCode",{parentName:"a"},"wix extension"))," and ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/tools/wixexe#build"},(0,a.kt)("inlineCode",{parentName:"a"},"wix build -ext"))," at the command line."),(0,a.kt)("h2",{id:"wixshellexec-custom-actions"},"WixShellExec custom actions"),(0,a.kt)("p",null,"The WixShellExec family of custom actions lets you launch documents and URL targets using the Windows shell's registered file type associations. A common use is to launch ReadMe files in the user's preferred text editor or Internet URLs in the user's preferred browser. WixShellExec avoids the need to use, for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"RegistrySearch")," to locate the user's default applications. Note that WixShellExecute can only be used as an immediate custom action as it launches an application without waiting for it to close. WixShellExec reads its target from the WixShellExecTarget property, formats it, and then calls ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecutew"},"ShellExecute")," with the formatted value. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<SetProperty Id="WixShellExecTarget" Value="appwiz.cpl" Before="LaunchArpCustomAction" Sequence="execute" />\n<CustomAction Id="LaunchArpCustomAction" BinaryRef="Wix4UtilCA_$(sys.BUILDARCHSHORT)" DllEntry="WixShellExec" Execute="immediate" Return="check" />\n\n<InstallExecuteSequence>\n  <Custom Action="LaunchArpCustomAction" Before="AppSearch" />\n</InstallExecuteSequence>\n')),(0,a.kt)("h3",{id:"launch-an-embedded-file"},"Launch an embedded file"),(0,a.kt)("p",null,"The WixShellExecBinary custom action is a variant of WixShellExec that extracts a file from the MSI package's Binary table and launches it. The file is named after the Binary row's id, so give the id like a file name with extension. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Binary Id="readme.rtf" SourceFile="readme.rtf" />\n<Property Id="WixShellExecBinaryId" Value="readme.rtf" />\n<CustomAction Id="LaunchReadmeCustomAction" BinaryRef="Wix4UtilCA_$(sys.BUILDARCHSHORT)" DllEntry="WixShellExecBinary" Execute="immediate" Return="check" />\n\n<InstallExecuteSequence>\n  <Custom Action="LaunchReadmeCustomAction" Before="AppSearch" />\n</InstallExecuteSequence>\n')),(0,a.kt)("h3",{id:"launch-a-file-without-elevation"},"Launch a file without elevation"),(0,a.kt)("p",null,"The WixUnelevatedShellExec custom action lets you launch a process with \"normal\" user privileges when running with elevated privileges. WixUnelevatedShellExec is useful to ensure that, for example, you don't launch a user's web browser with elevated privileges. (That's not typically a problem with modern browsers, luckily.)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Property Id="WixUnelevatedShellExecTarget" Value="https://wixtoolset.org/" />\n<CustomAction Id="LaunchImportantSiteCustomAction" BinaryRef="Wix4UtilCA_$(sys.BUILDARCHSHORT)" DllEntry="WixUnelevatedShellExec" Execute="immediate" Return="check" />\n\n<InstallExecuteSequence>\n  <Custom Action="LaunchImportantSiteCustomAction" Before="AppSearch" />\n</InstallExecuteSequence>\n')),(0,a.kt)("h2",{id:"broadcastenvironmentchange-and-broadcastsettingchange-custom-actions"},"BroadcastEnvironmentChange and BroadcastSettingChange custom actions"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/broadcastenvironmentchange"},"BroadcastEnvironmentChange")," and ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/broadcastsettingchange"},"BroadcastSettingChange")," elements in the ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/"},"Util schema")," schedule custom actions that send a WM_SETTINGCHANGE message to all top-level windows indicating that settings have changed. BroadcastEnvironmentChange indicates that environment variables have changed. BroadcastSettingChange indicates that unspecified settings have changed."),(0,a.kt)("p",null,"Other programs can listen for WM_SETTINGCHANGE and update any internal state with the new setting."),(0,a.kt)("p",null,"Windows Installer itself sends the WM_SETTINGCHANGE message for settings it changes while processing an MSI package but cannot do so for changes a package makes via custom action. Also, Windows Installer does not send WM_SETTINGCHANGE for environment variable changes when a reboot is pending."),(0,a.kt)("h2",{id:"checkrebootrequired-custom-actions"},"CheckRebootRequired custom actions"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/checkrebootrequired"},"CheckRebootRequired")," element in the ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/"},"Util schema")," schedules a custom action that schedules a reboot based on a deferred custom action that called the WixToolset.WcaUtil function ",(0,a.kt)("inlineCode",{parentName:"p"},"WcaDeferredActionRequiresReboot"),". The approach is necessary because a deferred custom action cannot directly schedule a reboot."),(0,a.kt)("h2",{id:"exitearlywithsuccess-custom-actions"},"ExitEarlyWithSuccess custom actions"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/exitearlywithsuccess"},"ExitEarlyWithSuccess")," element in the ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/"},"Util schema")," schedules a custom action that does nothing except return the value ERROR_NO_MORE_ITEMS. This return value causes Windows Installer to skip all remaining actions in the package and return a process exit code that indicates a successful installation."),(0,a.kt)("p",null,"This custom action is useful in cases where you want setup to exit without actually installing anything, but want it to return success to the calling process. A common scenario where this type of behavior is useful is in an out-of-order installation scenario for an .msi that implements major upgrades. When a user has version 2 of an .msi installed and then attempts to install version 1, this custom action can be used in conjunction with the Upgrade table to detect that version 2 is already installed to cause setup to exit without installing anything and return success. If any applications redistribute version 1 of the .msi, their installation processes will continue to work even if the user has version 2 of the .msi installed on their system."),(0,a.kt)("h2",{id:"failwhendeferred-custom-actions"},"FailWhenDeferred custom actions"),(0,a.kt)("p",null,"When authoring ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/msi/deferred-execution-custom-actions"},"deferred custom actions")," (which are custom actions that change the system state) in an MSI, it is necessary to also provide an equivalent set of rollback custom actions to undo the change in system state in case the MSI fails and rolls back. The rollback behavior typically needs to behave differently depending on if the MSI is currently being installed, upgraded, repaired, or uninstalled. This means that both success and failure cases need to be accounted for when coding and testing a set of deferred custom actions to make sure that they are working as expected."),(0,a.kt)("p",null,"The failure cases are often difficult to simulate by unit testing the custom action code directly because deferred custom action code typically depends on state information provided to it by Windows Installer during an active installation session. As a result, this type of testing usually requires fault injection in order to cause the rollback custom actions to be executed at the proper times during real installation scenarios."),(0,a.kt)("p",null,"WiX includes a simple deferred custom action to help make it easier to test rollback custom actions in an MSI. The FailWhenDeferred custom action always fails when it is executed, making it easy to inject a failure into your MSI to test your rollback custom actions."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/failwhendeferred"},"FailWhenDeferred")," element in the ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/"},"Util schema")," schedules the FailWhenDeferred custom action with a condition of ",(0,a.kt)("inlineCode",{parentName:"p"},"WIXFAILWHENDEFERRED=1"),". To inject a failure during installation rollback, for example, use a command line like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"msiexec.exe /i MyProduct.msi /qb /l*vx %temp%\\MyProductInstallFailure.log WIXFAILWHENDEFERRED=1\n")),(0,a.kt)("h2",{id:"waitforevent-and-waitforeventdeferred-custom-actions"},"WaitForEvent and WaitForEventDeferred custom actions"),(0,a.kt)("p",null,"If you have scenarios you want to test where a package or bundle takes a while to install, you can write a simple MSI package that includes the WaitForEvent custom actions to simulate this behavior. These custom actions -- available in both immediate and deferred modes -- wait for either of the globally named automatic reset events documented below and will either return ERROR_INSTALL_FAILURE or ERROR_SUCCESS depending on which event you signal."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Global\\WixWaitForEventFail")," - when signaled, the custom actions return ERROR_INSTALL_FAILURE."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Global\\WixWaitForEventSucceed")," - when signaled, the custom actions return ERROR_SUCCESS.")),(0,a.kt)("p",null,"This is especially useful in test cases when you don't want or need to build your entire product and only want small test packages."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/waitforevent"},"WaitForEvent")," and ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/waitforeventdeferred"},"WaitForEventDeferred")," elements in the ",(0,a.kt)("a",{parentName:"p",href:"/wixtoolset/docs/schema/util/"},"Util schema")," schedule the WaitForEvent custom actions."))}p.isMDXComponent=!0}}]);