"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[21130],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},10154:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>u});r(67294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const l={wip:6402,type:"Feature",by:"Rob Mensching (rob at firegiant.com)",title:"Improved patch filtering"},s=void 0,p={unversionedId:"development/wips/improved-patch-filtering",id:"development/wips/improved-patch-filtering",title:"Improved patch filtering",description:"User stories",source:"@site/docs/development/wips/6402-improved-patch-filtering.md",sourceDirName:"development/wips",slug:"/development/wips/improved-patch-filtering",permalink:"/wixtoolset/docs/development/wips/improved-patch-filtering",draft:!1,editUrl:"https://github.com/wixtoolset/web/tree/master/src/Docusaurus/docs/development/wips/6402-improved-patch-filtering.md",tags:[],version:"current",sidebarPosition:6402,frontMatter:{wip:6402,type:"Feature",by:"Rob Mensching (rob at firegiant.com)",title:"Improved patch filtering"},sidebar:"docsSidebar",previous:{title:"Source patch files from MSIs",permalink:"/wixtoolset/docs/development/wips/source-patch-files-from-msi"},next:{title:"ExePackage ARP entry",permalink:"/wixtoolset/docs/development/wips/exepackage-arp-entry"}},c={},u=[{value:"User stories",id:"user-stories",level:2},{value:"Proposal",id:"proposal",level:2},{value:"Considerations",id:"considerations",level:2},{value:"See Also",id:"see-also",level:2}],d={toc:u},f="wrapper";function m(e){var{components:t}=e,r=a(e,["components"]);return(0,n.kt)(f,i(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},d,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"user-stories"},"User stories"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"As a setup developer I can use patch families to filter an MSP without placing every Component, Feature, and CustomAction in a separate Fragment.")),(0,n.kt)("h2",{id:"proposal"},"Proposal"),(0,n.kt)("p",null,"In WiX v3, filtering in MSPs was dependent on the fragmentation, more technically the sections, of the source code. To include only content from a single\n",(0,n.kt)("inlineCode",{parentName:"p"},"Component")," required the ",(0,n.kt)("inlineCode",{parentName:"p"},"Component")," to be in a standalone ",(0,n.kt)("inlineCode",{parentName:"p"},"Fragment"),". This could lead to ",(0,n.kt)("em",{parentName:"p"},"extremely")," fragmented source code that was ugly and difficult\nto maintain."),(0,n.kt)("p",null,"However, later in WiX v3, ",(0,n.kt)("inlineCode",{parentName:"p"},"melt.exe")," added a feature to automatically create sections (aka: fragmentation) from an MSI admin image. Feedback on this\nfragmentation process was positive as it aligned with developers expecations for patch filtering behavior."),(0,n.kt)("p",null,"In WiX v4, with the simplified patch build process, the input MSIs and/or .wixpdbs will always pass through the same automatic fragmentation process\nfrom ",(0,n.kt)("inlineCode",{parentName:"p"},"melt.exe"),". Any sections defined in the .wixpdb are ignored. The end result is a patch filtering that behaves as developers expect rather than\nalong section boundaries."),(0,n.kt)("h2",{id:"considerations"},"Considerations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The section-based filtering allowed for complete control over patch filtering. So, while there are no known cases where the automatic fragmentation process\nwas not equally sufficient, it is possible section-based filtering might be desired by a user. In that case, a WixExtension can use the IWindowsInstallerBackendBinderExtension.FinalizePatchFilterIds\nextension point to programmatically modify the automatic fragmentation as needed.")),(0,n.kt)("h2",{id:"see-also"},"See Also"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"http://wixtoolset.org/issues/6402"},"WIXFEAT:6402"))))}m.isMDXComponent=!0}}]);