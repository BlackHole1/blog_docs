"use strict";(self.webpackChunkwixweb=self.webpackChunkwixweb||[]).push([[49768],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),d=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(r),s=n,k=p["".concat(u,".").concat(s)]||p[s]||m[s]||l;return r?a.createElement(k,o(o({ref:t},c),{},{components:r})):a.createElement(k,o({ref:t},c))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=s;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=r[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},52417:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>p});r(67294);var a=r(3905);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}const i={custom_edit_url:null,toc_max_heading_level:2},u="SourceLineNumber Class",d={unversionedId:"api/wixtoolset.data/sourcelinenumber",id:"api/wixtoolset.data/sourcelinenumber",title:"SourceLineNumber Class",description:"Represents file name and line number for source file",source:"@site/docs/api/wixtoolset.data/sourcelinenumber.md",sourceDirName:"api/wixtoolset.data",slug:"/api/wixtoolset.data/sourcelinenumber",permalink:"/wixtoolset/docs/api/wixtoolset.data/sourcelinenumber",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null,toc_max_heading_level:2},sidebar:"docsSidebar",previous:{title:"SectionType Enumeration",permalink:"/wixtoolset/docs/api/wixtoolset.data/sectiontype"},next:{title:"WixCorruptFileException Class",permalink:"/wixtoolset/docs/api/wixtoolset.data/wixcorruptfileexception"}},c={},p=[{value:"Methods",id:"methods",level:2},{value:"Properties",id:"properties",level:2},{value:"CreateFromEncoded(encodedSourceLineNumbers) Method",id:"createfromencoded_encodedsourcelinenumbers",level:2},{value:"Declaration",id:"declaration",level:3},{value:"Parameters",id:"parameters",level:3},{value:"CreateFromUri(uri) Method",id:"createfromuri_uri",level:2},{value:"Declaration",id:"declaration-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"CreateFromXObject(node, offset) Method",id:"createfromxobject_node_offset",level:2},{value:"Declaration",id:"declaration-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Equals(obj) Method",id:"equals_obj",level:2},{value:"Declaration",id:"declaration-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return value",id:"return-value",level:3},{value:"GetEncoded() Method",id:"getencoded_nop",level:2},{value:"Declaration",id:"declaration-4",level:3},{value:"GetFromXAnnotation(node) Method",id:"getfromxannotation_node",level:2},{value:"Declaration",id:"declaration-5",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return value",id:"return-value-1",level:3},{value:"GetHashCode() Method",id:"gethashcode_nop",level:2},{value:"Declaration",id:"declaration-6",level:3},{value:"Return value",id:"return-value-2",level:3},{value:"ToString() Method",id:"tostring_nop",level:2},{value:"Declaration",id:"declaration-7",level:3},{value:"Return value",id:"return-value-3",level:3},{value:"FileName Property",id:"filename",level:2},{value:"Declaration",id:"declaration-8",level:3},{value:"LineNumber Property",id:"linenumber",level:2},{value:"Declaration",id:"declaration-9",level:3},{value:"Parent Property",id:"parent",level:2},{value:"Declaration",id:"declaration-10",level:3},{value:"QualifiedFileName Property",id:"qualifiedfilename",level:2},{value:"Declaration",id:"declaration-11",level:3}],m={toc:p},s="wrapper";function k(e){var{components:t}=e,r=o(e,["components"]);return(0,a.kt)(s,l(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},a=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),a.forEach((function(t){n(e,t,r[t])}))}return e}({},m,r),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sourcelinenumber-class"},"SourceLineNumber Class"),(0,a.kt)("p",null,"Represents file name and line number for source file"),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Method"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#createfromencoded_encodedsourcelinenumbers"},"CreateFromEncoded(encodedSourceLineNumbers)")),(0,a.kt)("td",{parentName:"tr",align:null},"Creates a source line number from an encoded string.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#createfromuri_uri"},"CreateFromUri(uri)")),(0,a.kt)("td",{parentName:"tr",align:null},"Creates a source line number from a URI.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#createfromxobject_node_offset"},"CreateFromXObject(node, offset)")),(0,a.kt)("td",{parentName:"tr",align:null},"Creates a source line number from an XObject.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#equals_obj"},"Equals(obj)")),(0,a.kt)("td",{parentName:"tr",align:null},"Determines if two SourceLineNumbers are equivalent.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#getencoded_nop"},"GetEncoded()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns the SourceLineNumber and parents encoded as a string.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#getfromxannotation_node"},"GetFromXAnnotation(node)")),(0,a.kt)("td",{parentName:"tr",align:null},"Get the source line information for the current element. Typically this information is set by the precompiler for each element that it encounters.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#gethashcode_nop"},"GetHashCode()")),(0,a.kt)("td",{parentName:"tr",align:null},"Serves as a hash code for a particular type.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#tostring_nop"},"ToString()")),(0,a.kt)("td",{parentName:"tr",align:null},"Shows a string representation of a source line number.")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#filename"},"FileName")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets the file name of the source.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#linenumber"},"LineNumber")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets or sets the line number of the source.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#parent"},"Parent")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets or sets the parent source line number that included this source line number.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"#qualifiedfilename"},"QualifiedFileName")),(0,a.kt)("td",{parentName:"tr",align:null},"Gets the file name and line information.")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"WixToolset.Data.dll")," version ",(0,a.kt)("inlineCode",{parentName:"p"},"5.0.0+41e11442b2ca93e444b60213b5ae99dcbab787d8")),(0,a.kt)("h2",{id:"createfromencoded_encodedsourcelinenumbers"},"CreateFromEncoded(encodedSourceLineNumbers) Method"),(0,a.kt)("p",null,"Creates a source line number from an encoded string."),(0,a.kt)("h3",{id:"declaration"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public static SourceLineNumber CreateFromEncoded(\n  string encodedSourceLineNumbers\n)\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"encodedSourceLineNumbers"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Encoded string to parse.")))),(0,a.kt)("h2",{id:"createfromuri_uri"},"CreateFromUri(uri) Method"),(0,a.kt)("p",null,"Creates a source line number from a URI."),(0,a.kt)("h3",{id:"declaration-1"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public static SourceLineNumber CreateFromUri(\n  string uri\n)\n")),(0,a.kt)("h3",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"uri"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Uri to convert into source line number")))),(0,a.kt)("h2",{id:"createfromxobject_node_offset"},"CreateFromXObject(node, offset) Method"),(0,a.kt)("p",null,"Creates a source line number from an XObject."),(0,a.kt)("h3",{id:"declaration-2"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public static SourceLineNumber CreateFromXObject(\n  System.Xml.Linq.XObject node,\n  int offset\n)\n")),(0,a.kt)("h3",{id:"parameters-2"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"node"),(0,a.kt)("td",{parentName:"tr",align:null},"System.Xml.Linq.XObject"),(0,a.kt)("td",{parentName:"tr",align:null},"XML node to create source line number from.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"offset"),(0,a.kt)("td",{parentName:"tr",align:null},"int"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional line number offset into XML file not already included in the line information.")))),(0,a.kt)("h2",{id:"equals_obj"},"Equals(obj) Method"),(0,a.kt)("p",null,"Determines if two SourceLineNumbers are equivalent."),(0,a.kt)("h3",{id:"declaration-3"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public bool Equals(\n  System.Object obj\n)\n")),(0,a.kt)("h3",{id:"parameters-3"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"obj"),(0,a.kt)("td",{parentName:"tr",align:null},"System.Object"),(0,a.kt)("td",{parentName:"tr",align:null},"Object to compare.")))),(0,a.kt)("h3",{id:"return-value"},"Return value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bool")," True if SourceLineNumbers are equivalent."),(0,a.kt)("h2",{id:"getencoded_nop"},"GetEncoded() Method"),(0,a.kt)("p",null,"Returns the SourceLineNumber and parents encoded as a string."),(0,a.kt)("h3",{id:"declaration-4"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public string GetEncoded()\n")),(0,a.kt)("h2",{id:"getfromxannotation_node"},"GetFromXAnnotation(node) Method"),(0,a.kt)("p",null,"Get the source line information for the current element. Typically this information is set by the precompiler for each element that it encounters."),(0,a.kt)("h3",{id:"declaration-5"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public static SourceLineNumber GetFromXAnnotation(\n  System.Xml.Linq.XObject node\n)\n")),(0,a.kt)("h3",{id:"parameters-4"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"node"),(0,a.kt)("td",{parentName:"tr",align:null},"System.Xml.Linq.XObject"),(0,a.kt)("td",{parentName:"tr",align:null},"Element to get source line information for.")))),(0,a.kt)("h3",{id:"return-value-1"},"Return value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SourceLineNumber")," The source line number used to author the element being processed or null if the preprocessor did not process the element or the node is not an element."),(0,a.kt)("h2",{id:"gethashcode_nop"},"GetHashCode() Method"),(0,a.kt)("p",null,"Serves as a hash code for a particular type."),(0,a.kt)("h3",{id:"declaration-6"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public int GetHashCode()\n")),(0,a.kt)("h3",{id:"return-value-2"},"Return value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"int")," The hash code."),(0,a.kt)("h2",{id:"tostring_nop"},"ToString() Method"),(0,a.kt)("p",null,"Shows a string representation of a source line number."),(0,a.kt)("h3",{id:"declaration-7"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public string ToString()\n")),(0,a.kt)("h3",{id:"return-value-3"},"Return value"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")," String representation of a source line number."),(0,a.kt)("h2",{id:"filename"},"FileName Property"),(0,a.kt)("p",null,"Gets the file name of the source."),(0,a.kt)("h3",{id:"declaration-8"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public string FileName { get; set; } \n")),(0,a.kt)("h2",{id:"linenumber"},"LineNumber Property"),(0,a.kt)("p",null,"Gets or sets the line number of the source."),(0,a.kt)("h3",{id:"declaration-9"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public System.Nullable<System.Int32> LineNumber { get; set; } \n")),(0,a.kt)("h2",{id:"parent"},"Parent Property"),(0,a.kt)("p",null,"Gets or sets the parent source line number that included this source line number."),(0,a.kt)("h3",{id:"declaration-10"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public SourceLineNumber Parent { get; set; } \n")),(0,a.kt)("h2",{id:"qualifiedfilename"},"QualifiedFileName Property"),(0,a.kt)("p",null,"Gets the file name and line information."),(0,a.kt)("h3",{id:"declaration-11"},"Declaration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public string QualifiedFileName { get; set; } \n")))}k.isMDXComponent=!0}}]);